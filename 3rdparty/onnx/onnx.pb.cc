// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: onnx.proto
// Protobuf C++ Version: 6.31.1

#include "onnx.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace onnx {

inline constexpr TensorShapeProto_Dimension::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        denotation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TensorShapeProto_Dimension::TensorShapeProto_Dimension(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TensorShapeProto_Dimension_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorShapeProto_DimensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorShapeProto_DimensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorShapeProto_DimensionDefaultTypeInternal() {}
  union {
    TensorShapeProto_Dimension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorShapeProto_DimensionDefaultTypeInternal _TensorShapeProto_Dimension_default_instance_;

inline constexpr TensorProto_Segment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        begin_{::int64_t{0}},
        end_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR TensorProto_Segment::TensorProto_Segment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TensorProto_Segment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorProto_SegmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorProto_SegmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorProto_SegmentDefaultTypeInternal() {}
  union {
    TensorProto_Segment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorProto_SegmentDefaultTypeInternal _TensorProto_Segment_default_instance_;

inline constexpr StringStringEntryProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR StringStringEntryProto::StringStringEntryProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(StringStringEntryProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StringStringEntryProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringStringEntryProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringStringEntryProtoDefaultTypeInternal() {}
  union {
    StringStringEntryProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringStringEntryProtoDefaultTypeInternal _StringStringEntryProto_default_instance_;

inline constexpr SimpleShardedDimProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        num_shards_{::int64_t{0}},
        dim_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SimpleShardedDimProto::SimpleShardedDimProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(SimpleShardedDimProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SimpleShardedDimProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleShardedDimProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleShardedDimProtoDefaultTypeInternal() {}
  union {
    SimpleShardedDimProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleShardedDimProtoDefaultTypeInternal _SimpleShardedDimProto_default_instance_;

inline constexpr OperatorSetIdProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OperatorSetIdProto::OperatorSetIdProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(OperatorSetIdProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperatorSetIdProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperatorSetIdProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperatorSetIdProtoDefaultTypeInternal() {}
  union {
    OperatorSetIdProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperatorSetIdProtoDefaultTypeInternal _OperatorSetIdProto_default_instance_;

inline constexpr IntIntListEntryProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_{},
        key_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR IntIntListEntryProto::IntIntListEntryProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(IntIntListEntryProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IntIntListEntryProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntIntListEntryProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntIntListEntryProtoDefaultTypeInternal() {}
  union {
    IntIntListEntryProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntIntListEntryProtoDefaultTypeInternal _IntIntListEntryProto_default_instance_;

inline constexpr DeviceConfigurationProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        num_devices_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceConfigurationProto::DeviceConfigurationProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(DeviceConfigurationProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceConfigurationProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceConfigurationProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceConfigurationProtoDefaultTypeInternal() {}
  union {
    DeviceConfigurationProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceConfigurationProtoDefaultTypeInternal _DeviceConfigurationProto_default_instance_;

inline constexpr TensorShapeProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dim_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TensorShapeProto::TensorShapeProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TensorShapeProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorShapeProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorShapeProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorShapeProtoDefaultTypeInternal() {}
  union {
    TensorShapeProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorShapeProtoDefaultTypeInternal _TensorShapeProto_default_instance_;

inline constexpr TensorProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dims_{},
        float_data_{},
        int32_data_{},
        _int32_data_cached_byte_size_{0},
        string_data_{},
        int64_data_{},
        _int64_data_cached_byte_size_{0},
        double_data_{},
        uint64_data_{},
        _uint64_data_cached_byte_size_{0},
        external_data_{},
        metadata_props_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        raw_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        doc_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_{nullptr},
        data_type_{0},
        data_location_{static_cast< ::onnx::TensorProto_DataLocation >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TensorProto::TensorProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TensorProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorProtoDefaultTypeInternal() {}
  union {
    TensorProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorProtoDefaultTypeInternal _TensorProto_default_instance_;

inline constexpr TensorAnnotation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        quant_parameter_tensor_names_{},
        tensor_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR TensorAnnotation::TensorAnnotation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TensorAnnotation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorAnnotationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorAnnotationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorAnnotationDefaultTypeInternal() {}
  union {
    TensorAnnotation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorAnnotationDefaultTypeInternal _TensorAnnotation_default_instance_;

inline constexpr ShardedDimProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        simple_sharding_{},
        axis_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ShardedDimProto::ShardedDimProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(ShardedDimProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ShardedDimProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShardedDimProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShardedDimProtoDefaultTypeInternal() {}
  union {
    ShardedDimProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShardedDimProtoDefaultTypeInternal _ShardedDimProto_default_instance_;

inline constexpr TypeProto_Tensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_{nullptr},
        elem_type_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TypeProto_Tensor::TypeProto_Tensor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TypeProto_Tensor_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TypeProto_TensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TypeProto_TensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TypeProto_TensorDefaultTypeInternal() {}
  union {
    TypeProto_Tensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TypeProto_TensorDefaultTypeInternal _TypeProto_Tensor_default_instance_;

inline constexpr TypeProto_SparseTensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_{nullptr},
        elem_type_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TypeProto_SparseTensor::TypeProto_SparseTensor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TypeProto_SparseTensor_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TypeProto_SparseTensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TypeProto_SparseTensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TypeProto_SparseTensorDefaultTypeInternal() {}
  union {
    TypeProto_SparseTensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TypeProto_SparseTensorDefaultTypeInternal _TypeProto_SparseTensor_default_instance_;

inline constexpr SparseTensorProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dims_{},
        values_{nullptr},
        indices_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SparseTensorProto::SparseTensorProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(SparseTensorProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SparseTensorProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SparseTensorProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SparseTensorProtoDefaultTypeInternal() {}
  union {
    SparseTensorProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SparseTensorProtoDefaultTypeInternal _SparseTensorProto_default_instance_;

inline constexpr ShardingSpecProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{},
        index_to_device_group_map_{},
        sharded_dim_{},
        tensor_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ShardingSpecProto::ShardingSpecProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(ShardingSpecProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ShardingSpecProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShardingSpecProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShardingSpecProtoDefaultTypeInternal() {}
  union {
    ShardingSpecProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShardingSpecProtoDefaultTypeInternal _ShardingSpecProto_default_instance_;

inline constexpr TypeProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        denotation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TypeProto::TypeProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TypeProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TypeProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TypeProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TypeProtoDefaultTypeInternal() {}
  union {
    TypeProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TypeProtoDefaultTypeInternal _TypeProto_default_instance_;

inline constexpr TypeProto_Map::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_type_{nullptr},
        key_type_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TypeProto_Map::TypeProto_Map(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TypeProto_Map_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TypeProto_MapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TypeProto_MapDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TypeProto_MapDefaultTypeInternal() {}
  union {
    TypeProto_Map _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TypeProto_MapDefaultTypeInternal _TypeProto_Map_default_instance_;

inline constexpr TypeProto_Optional::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        elem_type_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TypeProto_Optional::TypeProto_Optional(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TypeProto_Optional_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TypeProto_OptionalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TypeProto_OptionalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TypeProto_OptionalDefaultTypeInternal() {}
  union {
    TypeProto_Optional _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TypeProto_OptionalDefaultTypeInternal _TypeProto_Optional_default_instance_;

inline constexpr TypeProto_Sequence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        elem_type_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TypeProto_Sequence::TypeProto_Sequence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TypeProto_Sequence_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TypeProto_SequenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TypeProto_SequenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TypeProto_SequenceDefaultTypeInternal() {}
  union {
    TypeProto_Sequence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TypeProto_SequenceDefaultTypeInternal _TypeProto_Sequence_default_instance_;

inline constexpr NodeDeviceConfigurationProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sharding_spec_{},
        configuration_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pipeline_stage_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeDeviceConfigurationProto::NodeDeviceConfigurationProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(NodeDeviceConfigurationProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeDeviceConfigurationProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDeviceConfigurationProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDeviceConfigurationProtoDefaultTypeInternal() {}
  union {
    NodeDeviceConfigurationProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDeviceConfigurationProtoDefaultTypeInternal _NodeDeviceConfigurationProto_default_instance_;

inline constexpr ValueInfoProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        metadata_props_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        doc_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ValueInfoProto::ValueInfoProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(ValueInfoProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValueInfoProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValueInfoProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValueInfoProtoDefaultTypeInternal() {}
  union {
    ValueInfoProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValueInfoProtoDefaultTypeInternal _ValueInfoProto_default_instance_;

inline constexpr AttributeProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        floats_{},
        ints_{},
        strings_{},
        tensors_{},
        graphs_{},
        type_protos_{},
        sparse_tensors_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        s_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        doc_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ref_attr_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        t_{nullptr},
        g_{nullptr},
        tp_{nullptr},
        sparse_tensor_{nullptr},
        i_{::int64_t{0}},
        f_{0},
        type_{static_cast< ::onnx::AttributeProto_AttributeType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR AttributeProto::AttributeProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(AttributeProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AttributeProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttributeProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttributeProtoDefaultTypeInternal() {}
  union {
    AttributeProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttributeProtoDefaultTypeInternal _AttributeProto_default_instance_;

inline constexpr GraphProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_{},
        initializer_{},
        input_{},
        output_{},
        value_info_{},
        quantization_annotation_{},
        sparse_initializer_{},
        metadata_props_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        doc_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GraphProto::GraphProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(GraphProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphProtoDefaultTypeInternal() {}
  union {
    GraphProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphProtoDefaultTypeInternal _GraphProto_default_instance_;

inline constexpr NodeProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_{},
        output_{},
        attribute_{},
        metadata_props_{},
        device_configurations_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        doc_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        overload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR NodeProto::NodeProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(NodeProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeProtoDefaultTypeInternal() {}
  union {
    NodeProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeProtoDefaultTypeInternal _NodeProto_default_instance_;

inline constexpr TrainingInfoProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        initialization_binding_{},
        update_binding_{},
        initialization_{nullptr},
        algorithm_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TrainingInfoProto::TrainingInfoProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(TrainingInfoProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrainingInfoProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrainingInfoProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrainingInfoProtoDefaultTypeInternal() {}
  union {
    TrainingInfoProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrainingInfoProtoDefaultTypeInternal _TrainingInfoProto_default_instance_;

inline constexpr FunctionProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_{},
        output_{},
        attribute_{},
        node_{},
        opset_import_{},
        attribute_proto_{},
        value_info_{},
        metadata_props_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        doc_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        overload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR FunctionProto::FunctionProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(FunctionProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FunctionProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionProtoDefaultTypeInternal() {}
  union {
    FunctionProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionProtoDefaultTypeInternal _FunctionProto_default_instance_;

inline constexpr ModelProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        opset_import_{},
        metadata_props_{},
        training_info_{},
        functions_{},
        configuration_{},
        producer_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        producer_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        doc_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        graph_{nullptr},
        ir_version_{::int64_t{0}},
        model_version_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ModelProto::ModelProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(ModelProto_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModelProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelProtoDefaultTypeInternal() {}
  union {
    ModelProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelProtoDefaultTypeInternal _ModelProto_default_instance_;
}  // namespace onnx
namespace onnx {
PROTOBUF_CONSTINIT const uint32_t AttributeProto_AttributeType_internal_data_[] = {
    983040u, 0u, };
static ::google::protobuf::internal::ExplicitlyConstructed<::std::string>
    AttributeProto_AttributeType_strings[15] = {};

static const char AttributeProto_AttributeType_names[] = {
    "FLOAT"
    "FLOATS"
    "GRAPH"
    "GRAPHS"
    "INT"
    "INTS"
    "SPARSE_TENSOR"
    "SPARSE_TENSORS"
    "STRING"
    "STRINGS"
    "TENSOR"
    "TENSORS"
    "TYPE_PROTO"
    "TYPE_PROTOS"
    "UNDEFINED"
};

static const ::google::protobuf::internal::EnumEntry AttributeProto_AttributeType_entries[] = {
    {{&AttributeProto_AttributeType_names[0], 5}, 1},
    {{&AttributeProto_AttributeType_names[5], 6}, 6},
    {{&AttributeProto_AttributeType_names[11], 5}, 5},
    {{&AttributeProto_AttributeType_names[16], 6}, 10},
    {{&AttributeProto_AttributeType_names[22], 3}, 2},
    {{&AttributeProto_AttributeType_names[25], 4}, 7},
    {{&AttributeProto_AttributeType_names[29], 13}, 11},
    {{&AttributeProto_AttributeType_names[42], 14}, 12},
    {{&AttributeProto_AttributeType_names[56], 6}, 3},
    {{&AttributeProto_AttributeType_names[62], 7}, 8},
    {{&AttributeProto_AttributeType_names[69], 6}, 4},
    {{&AttributeProto_AttributeType_names[75], 7}, 9},
    {{&AttributeProto_AttributeType_names[82], 10}, 13},
    {{&AttributeProto_AttributeType_names[92], 11}, 14},
    {{&AttributeProto_AttributeType_names[103], 9}, 0},
};

static const int AttributeProto_AttributeType_entries_by_number[] = {
    14,  // 0 -> UNDEFINED
    0,  // 1 -> FLOAT
    4,  // 2 -> INT
    8,  // 3 -> STRING
    10,  // 4 -> TENSOR
    2,  // 5 -> GRAPH
    1,  // 6 -> FLOATS
    5,  // 7 -> INTS
    9,  // 8 -> STRINGS
    11,  // 9 -> TENSORS
    3,  // 10 -> GRAPHS
    6,  // 11 -> SPARSE_TENSOR
    7,  // 12 -> SPARSE_TENSORS
    12,  // 13 -> TYPE_PROTO
    13,  // 14 -> TYPE_PROTOS
};

const ::std::string& AttributeProto_AttributeType_Name(AttributeProto_AttributeType value) {
  static const bool kDummy = ::google::protobuf::internal::InitializeEnumStrings(
      AttributeProto_AttributeType_entries, AttributeProto_AttributeType_entries_by_number, 15,
      AttributeProto_AttributeType_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(AttributeProto_AttributeType_entries,
                                  AttributeProto_AttributeType_entries_by_number,
                                  15, value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString() : AttributeProto_AttributeType_strings[idx].get();
}

bool AttributeProto_AttributeType_Parse(::absl::string_view name, AttributeProto_AttributeType* PROTOBUF_NONNULL value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      AttributeProto_AttributeType_entries, 15, name, &int_value);
  if (success) {
    *value = static_cast<AttributeProto_AttributeType>(int_value);
  }
  return success;
}
PROTOBUF_CONSTINIT const uint32_t TensorProto_DataType_internal_data_[] = {
    1572864u, 0u, };
static ::google::protobuf::internal::ExplicitlyConstructed<::std::string>
    TensorProto_DataType_strings[24] = {};

static const char TensorProto_DataType_names[] = {
    "BFLOAT16"
    "BOOL"
    "COMPLEX128"
    "COMPLEX64"
    "DOUBLE"
    "FLOAT"
    "FLOAT16"
    "FLOAT4E2M1"
    "FLOAT8E4M3FN"
    "FLOAT8E4M3FNUZ"
    "FLOAT8E5M2"
    "FLOAT8E5M2FNUZ"
    "INT16"
    "INT32"
    "INT4"
    "INT64"
    "INT8"
    "STRING"
    "UINT16"
    "UINT32"
    "UINT4"
    "UINT64"
    "UINT8"
    "UNDEFINED"
};

static const ::google::protobuf::internal::EnumEntry TensorProto_DataType_entries[] = {
    {{&TensorProto_DataType_names[0], 8}, 16},
    {{&TensorProto_DataType_names[8], 4}, 9},
    {{&TensorProto_DataType_names[12], 10}, 15},
    {{&TensorProto_DataType_names[22], 9}, 14},
    {{&TensorProto_DataType_names[31], 6}, 11},
    {{&TensorProto_DataType_names[37], 5}, 1},
    {{&TensorProto_DataType_names[42], 7}, 10},
    {{&TensorProto_DataType_names[49], 10}, 23},
    {{&TensorProto_DataType_names[59], 12}, 17},
    {{&TensorProto_DataType_names[71], 14}, 18},
    {{&TensorProto_DataType_names[85], 10}, 19},
    {{&TensorProto_DataType_names[95], 14}, 20},
    {{&TensorProto_DataType_names[109], 5}, 5},
    {{&TensorProto_DataType_names[114], 5}, 6},
    {{&TensorProto_DataType_names[119], 4}, 22},
    {{&TensorProto_DataType_names[123], 5}, 7},
    {{&TensorProto_DataType_names[128], 4}, 3},
    {{&TensorProto_DataType_names[132], 6}, 8},
    {{&TensorProto_DataType_names[138], 6}, 4},
    {{&TensorProto_DataType_names[144], 6}, 12},
    {{&TensorProto_DataType_names[150], 5}, 21},
    {{&TensorProto_DataType_names[155], 6}, 13},
    {{&TensorProto_DataType_names[161], 5}, 2},
    {{&TensorProto_DataType_names[166], 9}, 0},
};

static const int TensorProto_DataType_entries_by_number[] = {
    23,  // 0 -> UNDEFINED
    5,  // 1 -> FLOAT
    22,  // 2 -> UINT8
    16,  // 3 -> INT8
    18,  // 4 -> UINT16
    12,  // 5 -> INT16
    13,  // 6 -> INT32
    15,  // 7 -> INT64
    17,  // 8 -> STRING
    1,  // 9 -> BOOL
    6,  // 10 -> FLOAT16
    4,  // 11 -> DOUBLE
    19,  // 12 -> UINT32
    21,  // 13 -> UINT64
    3,  // 14 -> COMPLEX64
    2,  // 15 -> COMPLEX128
    0,  // 16 -> BFLOAT16
    8,  // 17 -> FLOAT8E4M3FN
    9,  // 18 -> FLOAT8E4M3FNUZ
    10,  // 19 -> FLOAT8E5M2
    11,  // 20 -> FLOAT8E5M2FNUZ
    20,  // 21 -> UINT4
    14,  // 22 -> INT4
    7,  // 23 -> FLOAT4E2M1
};

const ::std::string& TensorProto_DataType_Name(TensorProto_DataType value) {
  static const bool kDummy = ::google::protobuf::internal::InitializeEnumStrings(
      TensorProto_DataType_entries, TensorProto_DataType_entries_by_number, 24,
      TensorProto_DataType_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(TensorProto_DataType_entries,
                                  TensorProto_DataType_entries_by_number,
                                  24, value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString() : TensorProto_DataType_strings[idx].get();
}

bool TensorProto_DataType_Parse(::absl::string_view name, TensorProto_DataType* PROTOBUF_NONNULL value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      TensorProto_DataType_entries, 24, name, &int_value);
  if (success) {
    *value = static_cast<TensorProto_DataType>(int_value);
  }
  return success;
}
PROTOBUF_CONSTINIT const uint32_t TensorProto_DataLocation_internal_data_[] = {
    131072u, 0u, };
static ::google::protobuf::internal::ExplicitlyConstructed<::std::string>
    TensorProto_DataLocation_strings[2] = {};

static const char TensorProto_DataLocation_names[] = {
    "DEFAULT"
    "EXTERNAL"
};

static const ::google::protobuf::internal::EnumEntry TensorProto_DataLocation_entries[] = {
    {{&TensorProto_DataLocation_names[0], 7}, 0},
    {{&TensorProto_DataLocation_names[7], 8}, 1},
};

static const int TensorProto_DataLocation_entries_by_number[] = {
    0,  // 0 -> DEFAULT
    1,  // 1 -> EXTERNAL
};

const ::std::string& TensorProto_DataLocation_Name(TensorProto_DataLocation value) {
  static const bool kDummy = ::google::protobuf::internal::InitializeEnumStrings(
      TensorProto_DataLocation_entries, TensorProto_DataLocation_entries_by_number, 2,
      TensorProto_DataLocation_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(TensorProto_DataLocation_entries,
                                  TensorProto_DataLocation_entries_by_number,
                                  2, value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString() : TensorProto_DataLocation_strings[idx].get();
}

bool TensorProto_DataLocation_Parse(::absl::string_view name, TensorProto_DataLocation* PROTOBUF_NONNULL value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      TensorProto_DataLocation_entries, 2, name, &int_value);
  if (success) {
    *value = static_cast<TensorProto_DataLocation>(int_value);
  }
  return success;
}
PROTOBUF_CONSTINIT const uint32_t Version_internal_data_[] = {
    786432u, 0u, };
static ::google::protobuf::internal::ExplicitlyConstructed<::std::string>
    Version_strings[12] = {};

static const char Version_names[] = {
    "IR_VERSION"
    "IR_VERSION_2017_10_10"
    "IR_VERSION_2017_10_30"
    "IR_VERSION_2017_11_3"
    "IR_VERSION_2019_1_22"
    "IR_VERSION_2019_3_18"
    "IR_VERSION_2019_9_19"
    "IR_VERSION_2020_5_8"
    "IR_VERSION_2021_7_30"
    "IR_VERSION_2023_5_5"
    "IR_VERSION_2024_3_25"
    "_START_VERSION"
};

static const ::google::protobuf::internal::EnumEntry Version_entries[] = {
    {{&Version_names[0], 10}, 11},
    {{&Version_names[10], 21}, 1},
    {{&Version_names[31], 21}, 2},
    {{&Version_names[52], 20}, 3},
    {{&Version_names[72], 20}, 4},
    {{&Version_names[92], 20}, 5},
    {{&Version_names[112], 20}, 6},
    {{&Version_names[132], 19}, 7},
    {{&Version_names[151], 20}, 8},
    {{&Version_names[171], 19}, 9},
    {{&Version_names[190], 20}, 10},
    {{&Version_names[210], 14}, 0},
};

static const int Version_entries_by_number[] = {
    11,  // 0 -> _START_VERSION
    1,  // 1 -> IR_VERSION_2017_10_10
    2,  // 2 -> IR_VERSION_2017_10_30
    3,  // 3 -> IR_VERSION_2017_11_3
    4,  // 4 -> IR_VERSION_2019_1_22
    5,  // 5 -> IR_VERSION_2019_3_18
    6,  // 6 -> IR_VERSION_2019_9_19
    7,  // 7 -> IR_VERSION_2020_5_8
    8,  // 8 -> IR_VERSION_2021_7_30
    9,  // 9 -> IR_VERSION_2023_5_5
    10,  // 10 -> IR_VERSION_2024_3_25
    0,  // 11 -> IR_VERSION
};

const ::std::string& Version_Name(Version value) {
  static const bool kDummy = ::google::protobuf::internal::InitializeEnumStrings(
      Version_entries, Version_entries_by_number, 12,
      Version_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(Version_entries,
                                  Version_entries_by_number,
                                  12, value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString() : Version_strings[idx].get();
}

bool Version_Parse(::absl::string_view name, Version* PROTOBUF_NONNULL value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      Version_entries, 12, name, &int_value);
  if (success) {
    *value = static_cast<Version>(int_value);
  }
  return success;
}
PROTOBUF_CONSTINIT const uint32_t OperatorStatus_internal_data_[] = {
    131072u, 0u, };
static ::google::protobuf::internal::ExplicitlyConstructed<::std::string>
    OperatorStatus_strings[2] = {};

static const char OperatorStatus_names[] = {
    "EXPERIMENTAL"
    "STABLE"
};

static const ::google::protobuf::internal::EnumEntry OperatorStatus_entries[] = {
    {{&OperatorStatus_names[0], 12}, 0},
    {{&OperatorStatus_names[12], 6}, 1},
};

static const int OperatorStatus_entries_by_number[] = {
    0,  // 0 -> EXPERIMENTAL
    1,  // 1 -> STABLE
};

const ::std::string& OperatorStatus_Name(OperatorStatus value) {
  static const bool kDummy = ::google::protobuf::internal::InitializeEnumStrings(
      OperatorStatus_entries, OperatorStatus_entries_by_number, 2,
      OperatorStatus_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(OperatorStatus_entries,
                                  OperatorStatus_entries_by_number,
                                  2, value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString() : OperatorStatus_strings[idx].get();
}

bool OperatorStatus_Parse(::absl::string_view name, OperatorStatus* PROTOBUF_NONNULL value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      OperatorStatus_entries, 2, name, &int_value);
  if (success) {
    *value = static_cast<OperatorStatus>(int_value);
  }
  return success;
}
// ===================================================================

class AttributeProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AttributeProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_._has_bits_);
};

AttributeProto::AttributeProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, AttributeProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.AttributeProto)
}
PROTOBUF_NDEBUG_INLINE AttributeProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::AttributeProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        floats_{visibility, arena, from.floats_},
        ints_{visibility, arena, from.ints_},
        strings_{visibility, arena, from.strings_},
        tensors_{visibility, arena, from.tensors_},
        graphs_{visibility, arena, from.graphs_},
        type_protos_{visibility, arena, from.type_protos_},
        sparse_tensors_{visibility, arena, from.sparse_tensors_},
        name_(arena, from.name_),
        s_(arena, from.s_),
        doc_string_(arena, from.doc_string_),
        ref_attr_name_(arena, from.ref_attr_name_) {}

AttributeProto::AttributeProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AttributeProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, AttributeProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AttributeProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.t_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.t_)
                : nullptr;
  _impl_.g_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.g_)
                : nullptr;
  _impl_.tp_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.tp_)
                : nullptr;
  _impl_.sparse_tensor_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.sparse_tensor_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, i_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, i_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, i_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:onnx.AttributeProto)
}
PROTOBUF_NDEBUG_INLINE AttributeProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        floats_{visibility, arena},
        ints_{visibility, arena},
        strings_{visibility, arena},
        tensors_{visibility, arena},
        graphs_{visibility, arena},
        type_protos_{visibility, arena},
        sparse_tensors_{visibility, arena},
        name_(arena),
        s_(arena),
        doc_string_(arena),
        ref_attr_name_(arena) {}

inline void AttributeProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, t_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, t_) +
               sizeof(Impl_::type_));
}
AttributeProto::~AttributeProto() {
  // @@protoc_insertion_point(destructor:onnx.AttributeProto)
  SharedDtor(*this);
}
inline void AttributeProto::SharedDtor(MessageLite& self) {
  AttributeProto& this_ = static_cast<AttributeProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.s_.Destroy();
  this_._impl_.doc_string_.Destroy();
  this_._impl_.ref_attr_name_.Destroy();
  delete this_._impl_.t_;
  delete this_._impl_.g_;
  delete this_._impl_.tp_;
  delete this_._impl_.sparse_tensor_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AttributeProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AttributeProto(arena);
}
constexpr auto AttributeProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.floats_) +
          decltype(AttributeProto::_impl_.floats_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.ints_) +
          decltype(AttributeProto::_impl_.ints_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.strings_) +
          decltype(AttributeProto::_impl_.strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.tensors_) +
          decltype(AttributeProto::_impl_.tensors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.graphs_) +
          decltype(AttributeProto::_impl_.graphs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.sparse_tensors_) +
          decltype(AttributeProto::_impl_.sparse_tensors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.type_protos_) +
          decltype(AttributeProto::_impl_.type_protos_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AttributeProto), alignof(AttributeProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AttributeProto::PlacementNew_,
                                 sizeof(AttributeProto),
                                 alignof(AttributeProto));
  }
}
constexpr auto AttributeProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<20>{
      {
          &_AttributeProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AttributeProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<AttributeProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AttributeProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<AttributeProto>(), &AttributeProto::ByteSizeLong,
              &AttributeProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_._cached_size_),
          true,
      },
      "onnx.AttributeProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<20> AttributeProto_class_data_ =
    AttributeProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AttributeProto::GetClassData() const {
  return AttributeProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 9, 0, 2>
AttributeProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_._has_bits_),
    0, // no _extensions_
    23, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4287072256,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AttributeProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::AttributeProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.name_)}},
    // optional float f = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 9, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.f_)}},
    // optional int64 i = 3;
    {::_pbi::TcParser::FastV64S1,
     {24, 8, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.i_)}},
    // optional bytes s = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.s_)}},
    // optional .onnx.TensorProto t = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.t_)}},
    // optional .onnx.GraphProto g = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 1, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.g_)}},
    // repeated float floats = 7;
    {::_pbi::TcParser::FastF32R1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.floats_)}},
    // repeated int64 ints = 8;
    {::_pbi::TcParser::FastV64R1,
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.ints_)}},
    // repeated bytes strings = 9;
    {::_pbi::TcParser::FastBR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.strings_)}},
    // repeated .onnx.TensorProto tensors = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 2, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.tensors_)}},
    // repeated .onnx.GraphProto graphs = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 3, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.graphs_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string doc_string = 13;
    {::_pbi::TcParser::FastBS1,
     {106, 2, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.doc_string_)}},
    // optional .onnx.TypeProto tp = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 6, 4, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.tp_)}},
    // repeated .onnx.TypeProto type_protos = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 5, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.type_protos_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .onnx.AttributeProto.AttributeType type = 20;
    {::_pbi::TcParser::FastEr0S2,
     {416, 10, 14, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.type_)}},
    // optional string ref_attr_name = 21;
    {::_pbi::TcParser::FastBS2,
     {426, 3, 0, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.ref_attr_name_)}},
    // optional .onnx.SparseTensorProto sparse_tensor = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 7, 6, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.sparse_tensor_)}},
    // repeated .onnx.SparseTensorProto sparse_tensors = 23;
    {::_pbi::TcParser::FastMtR2,
     {442, 63, 7, PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.sparse_tensors_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional float f = 2;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.f_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int64 i = 3;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.i_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bytes s = 4;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.s_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .onnx.TensorProto t = 5;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.t_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .onnx.GraphProto g = 6;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.g_), _Internal::kHasBitsOffset + 5, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated float floats = 7;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.floats_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
    // repeated int64 ints = 8;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.ints_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated bytes strings = 9;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.strings_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated .onnx.TensorProto tensors = 10;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.tensors_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.GraphProto graphs = 11;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.graphs_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string doc_string = 13;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.doc_string_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .onnx.TypeProto tp = 14;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.tp_), _Internal::kHasBitsOffset + 6, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.TypeProto type_protos = 15;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.type_protos_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .onnx.AttributeProto.AttributeType type = 20;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.type_), _Internal::kHasBitsOffset + 10, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string ref_attr_name = 21;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.ref_attr_name_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .onnx.SparseTensorProto sparse_tensor = 22;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.sparse_tensor_), _Internal::kHasBitsOffset + 7, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.SparseTensorProto sparse_tensors = 23;
    {PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.sparse_tensors_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TensorProto>()},
      {::_pbi::TcParser::GetTable<::onnx::GraphProto>()},
      {::_pbi::TcParser::GetTable<::onnx::TensorProto>()},
      {::_pbi::TcParser::GetTable<::onnx::GraphProto>()},
      {::_pbi::TcParser::GetTable<::onnx::TypeProto>()},
      {::_pbi::TcParser::GetTable<::onnx::TypeProto>()},
      {::_pbi::TcParser::GetTable<::onnx::SparseTensorProto>()},
      {::_pbi::TcParser::GetTable<::onnx::SparseTensorProto>()},
      {0, 14},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AttributeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.AttributeProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.floats_.Clear();
  _impl_.ints_.Clear();
  _impl_.strings_.Clear();
  _impl_.tensors_.Clear();
  _impl_.graphs_.Clear();
  _impl_.type_protos_.Clear();
  _impl_.sparse_tensors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.s_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.doc_string_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.ref_attr_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.t_ != nullptr);
      _impl_.t_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.g_ != nullptr);
      _impl_.g_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.tp_ != nullptr);
      _impl_.tp_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.sparse_tensor_ != nullptr);
      _impl_.sparse_tensor_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    ::memset(&_impl_.i_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.i_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AttributeProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AttributeProto& this_ = static_cast<const AttributeProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AttributeProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AttributeProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.AttributeProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_name();
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional float f = 2;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this_._internal_f(), target);
  }

  // optional int64 i = 3;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
            stream, this_._internal_i(), target);
  }

  // optional bytes s = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_s();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // optional .onnx.TensorProto t = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.t_, this_._impl_.t_->GetCachedSize(), target,
        stream);
  }

  // optional .onnx.GraphProto g = 6;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.g_, this_._impl_.g_->GetCachedSize(), target,
        stream);
  }

  // repeated float floats = 7;
  for (int i = 0, n = this_._internal_floats_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this_._internal_floats().Get(i), target);
  }

  // repeated int64 ints = 8;
  for (int i = 0, n = this_._internal_ints_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        8, this_._internal_ints().Get(i), target);
  }

  // repeated bytes strings = 9;
  for (int i = 0, n = this_._internal_strings_size(); i < n; ++i) {
    const auto& s = this_._internal_strings().Get(i);
    target = stream->WriteBytes(9, s, target);
  }

  // repeated .onnx.TensorProto tensors = 10;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_tensors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_tensors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            10, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.GraphProto graphs = 11;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_graphs_size());
       i < n; i++) {
    const auto& repfield = this_._internal_graphs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional string doc_string = 13;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const ::std::string& _s = this_._internal_doc_string();
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional .onnx.TypeProto tp = 14;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, *this_._impl_.tp_, this_._impl_.tp_->GetCachedSize(), target,
        stream);
  }

  // repeated .onnx.TypeProto type_protos = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_type_protos_size());
       i < n; i++) {
    const auto& repfield = this_._internal_type_protos().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .onnx.AttributeProto.AttributeType type = 20;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        20, this_._internal_type(), target);
  }

  // optional string ref_attr_name = 21;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const ::std::string& _s = this_._internal_ref_attr_name();
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // optional .onnx.SparseTensorProto sparse_tensor = 22;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        22, *this_._impl_.sparse_tensor_, this_._impl_.sparse_tensor_->GetCachedSize(), target,
        stream);
  }

  // repeated .onnx.SparseTensorProto sparse_tensors = 23;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_sparse_tensors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_sparse_tensors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            23, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.AttributeProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AttributeProto::ByteSizeLong(const MessageLite& base) {
  const AttributeProto& this_ = static_cast<const AttributeProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AttributeProto::ByteSizeLong() const {
  const AttributeProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.AttributeProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated float floats = 7;
    {
      ::size_t data_size = ::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_floats_size());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_floats_size());
      total_size += tag_size + data_size;
    }
    // repeated int64 ints = 8;
    {
      ::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
          this_._internal_ints());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_ints_size());
      total_size += tag_size + data_size;
    }
    // repeated bytes strings = 9;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_strings().size());
      for (int i = 0, n = this_._internal_strings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
            this_._internal_strings().Get(i));
      }
    }
    // repeated .onnx.TensorProto tensors = 10;
    {
      total_size += 1UL * this_._internal_tensors_size();
      for (const auto& msg : this_._internal_tensors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.GraphProto graphs = 11;
    {
      total_size += 1UL * this_._internal_graphs_size();
      for (const auto& msg : this_._internal_graphs()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.TypeProto type_protos = 15;
    {
      total_size += 1UL * this_._internal_type_protos_size();
      for (const auto& msg : this_._internal_type_protos()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.SparseTensorProto sparse_tensors = 23;
    {
      total_size += 2UL * this_._internal_sparse_tensors_size();
      for (const auto& msg : this_._internal_sparse_tensors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000200u & cached_has_bits) * 5;
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional bytes s = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_s());
    }
    // optional string doc_string = 13;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_doc_string());
    }
    // optional string ref_attr_name = 21;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_ref_attr_name());
    }
    // optional .onnx.TensorProto t = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.t_);
    }
    // optional .onnx.GraphProto g = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.g_);
    }
    // optional .onnx.TypeProto tp = 14;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tp_);
    }
    // optional .onnx.SparseTensorProto sparse_tensor = 22;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sparse_tensor_);
    }
  }
  if ((cached_has_bits & 0x00000500u) != 0) {
    // optional int64 i = 3;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_i());
    }
    // optional .onnx.AttributeProto.AttributeType type = 20;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void AttributeProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AttributeProto*>(&to_msg);
  auto& from = static_cast<const AttributeProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.AttributeProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_floats()->MergeFrom(from._internal_floats());
  _this->_internal_mutable_ints()->MergeFrom(from._internal_ints());
  _this->_internal_mutable_strings()->MergeFrom(from._internal_strings());
  _this->_internal_mutable_tensors()->MergeFrom(
      from._internal_tensors());
  _this->_internal_mutable_graphs()->MergeFrom(
      from._internal_graphs());
  _this->_internal_mutable_type_protos()->MergeFrom(
      from._internal_type_protos());
  _this->_internal_mutable_sparse_tensors()->MergeFrom(
      from._internal_sparse_tensors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_s(from._internal_s());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_doc_string(from._internal_doc_string());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_ref_attr_name(from._internal_ref_attr_name());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.t_ != nullptr);
      if (_this->_impl_.t_ == nullptr) {
        _this->_impl_.t_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.t_);
      } else {
        _this->_impl_.t_->MergeFrom(*from._impl_.t_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.g_ != nullptr);
      if (_this->_impl_.g_ == nullptr) {
        _this->_impl_.g_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.g_);
      } else {
        _this->_impl_.g_->MergeFrom(*from._impl_.g_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.tp_ != nullptr);
      if (_this->_impl_.tp_ == nullptr) {
        _this->_impl_.tp_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.tp_);
      } else {
        _this->_impl_.tp_->MergeFrom(*from._impl_.tp_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.sparse_tensor_ != nullptr);
      if (_this->_impl_.sparse_tensor_ == nullptr) {
        _this->_impl_.sparse_tensor_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.sparse_tensor_);
      } else {
        _this->_impl_.sparse_tensor_->MergeFrom(*from._impl_.sparse_tensor_);
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.i_ = from._impl_.i_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.f_ = from._impl_.f_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void AttributeProto::CopyFrom(const AttributeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.AttributeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AttributeProto::InternalSwap(AttributeProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.floats_.InternalSwap(&other->_impl_.floats_);
  _impl_.ints_.InternalSwap(&other->_impl_.ints_);
  _impl_.strings_.InternalSwap(&other->_impl_.strings_);
  _impl_.tensors_.InternalSwap(&other->_impl_.tensors_);
  _impl_.graphs_.InternalSwap(&other->_impl_.graphs_);
  _impl_.type_protos_.InternalSwap(&other->_impl_.type_protos_);
  _impl_.sparse_tensors_.InternalSwap(&other->_impl_.sparse_tensors_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.s_, &other->_impl_.s_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.doc_string_, &other->_impl_.doc_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ref_attr_name_, &other->_impl_.ref_attr_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.type_)
      + sizeof(AttributeProto::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(AttributeProto, _impl_.t_)>(
          reinterpret_cast<char*>(&_impl_.t_),
          reinterpret_cast<char*>(&other->_impl_.t_));
}

// ===================================================================

class ValueInfoProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValueInfoProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_._has_bits_);
};

ValueInfoProto::ValueInfoProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, ValueInfoProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.ValueInfoProto)
}
PROTOBUF_NDEBUG_INLINE ValueInfoProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::ValueInfoProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        metadata_props_{visibility, arena, from.metadata_props_},
        name_(arena, from.name_),
        doc_string_(arena, from.doc_string_) {}

ValueInfoProto::ValueInfoProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValueInfoProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, ValueInfoProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValueInfoProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.type_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.type_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:onnx.ValueInfoProto)
}
PROTOBUF_NDEBUG_INLINE ValueInfoProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        metadata_props_{visibility, arena},
        name_(arena),
        doc_string_(arena) {}

inline void ValueInfoProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
ValueInfoProto::~ValueInfoProto() {
  // @@protoc_insertion_point(destructor:onnx.ValueInfoProto)
  SharedDtor(*this);
}
inline void ValueInfoProto::SharedDtor(MessageLite& self) {
  ValueInfoProto& this_ = static_cast<ValueInfoProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.doc_string_.Destroy();
  delete this_._impl_.type_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValueInfoProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValueInfoProto(arena);
}
constexpr auto ValueInfoProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_.metadata_props_) +
          decltype(ValueInfoProto::_impl_.metadata_props_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ValueInfoProto), alignof(ValueInfoProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValueInfoProto::PlacementNew_,
                                 sizeof(ValueInfoProto),
                                 alignof(ValueInfoProto));
  }
}
constexpr auto ValueInfoProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<20>{
      {
          &_ValueInfoProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValueInfoProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<ValueInfoProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValueInfoProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<ValueInfoProto>(), &ValueInfoProto::ByteSizeLong,
              &ValueInfoProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_._cached_size_),
          true,
      },
      "onnx.ValueInfoProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<20> ValueInfoProto_class_data_ =
    ValueInfoProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValueInfoProto::GetClassData() const {
  return ValueInfoProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
ValueInfoProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValueInfoProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::ValueInfoProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .onnx.StringStringEntryProto metadata_props = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_.metadata_props_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_.name_)}},
    // optional .onnx.TypeProto type = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_.type_)}},
    // optional string doc_string = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_.doc_string_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .onnx.TypeProto type = 2;
    {PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string doc_string = 3;
    {PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_.doc_string_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.StringStringEntryProto metadata_props = 4;
    {PROTOBUF_FIELD_OFFSET(ValueInfoProto, _impl_.metadata_props_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TypeProto>()},
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ValueInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.ValueInfoProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_props_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.doc_string_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.type_ != nullptr);
      _impl_.type_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValueInfoProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValueInfoProto& this_ = static_cast<const ValueInfoProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValueInfoProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValueInfoProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.ValueInfoProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_name();
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .onnx.TypeProto type = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.type_, this_._impl_.type_->GetCachedSize(), target,
        stream);
  }

  // optional string doc_string = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_doc_string();
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_metadata_props_size());
       i < n; i++) {
    const auto& repfield = this_._internal_metadata_props().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.ValueInfoProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValueInfoProto::ByteSizeLong(const MessageLite& base) {
  const ValueInfoProto& this_ = static_cast<const ValueInfoProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValueInfoProto::ByteSizeLong() const {
  const ValueInfoProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.ValueInfoProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .onnx.StringStringEntryProto metadata_props = 4;
    {
      total_size += 1UL * this_._internal_metadata_props_size();
      for (const auto& msg : this_._internal_metadata_props()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional string doc_string = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_doc_string());
    }
    // optional .onnx.TypeProto type = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_);
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void ValueInfoProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValueInfoProto*>(&to_msg);
  auto& from = static_cast<const ValueInfoProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.ValueInfoProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_metadata_props()->MergeFrom(
      from._internal_metadata_props());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_doc_string(from._internal_doc_string());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.type_ != nullptr);
      if (_this->_impl_.type_ == nullptr) {
        _this->_impl_.type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.type_);
      } else {
        _this->_impl_.type_->MergeFrom(*from._impl_.type_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ValueInfoProto::CopyFrom(const ValueInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.ValueInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValueInfoProto::InternalSwap(ValueInfoProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.metadata_props_.InternalSwap(&other->_impl_.metadata_props_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.doc_string_, &other->_impl_.doc_string_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

// ===================================================================

class NodeProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NodeProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeProto, _impl_._has_bits_);
};

NodeProto::NodeProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, NodeProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.NodeProto)
}
PROTOBUF_NDEBUG_INLINE NodeProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::NodeProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_{visibility, arena, from.input_},
        output_{visibility, arena, from.output_},
        attribute_{visibility, arena, from.attribute_},
        metadata_props_{visibility, arena, from.metadata_props_},
        device_configurations_{visibility, arena, from.device_configurations_},
        name_(arena, from.name_),
        op_type_(arena, from.op_type_),
        doc_string_(arena, from.doc_string_),
        domain_(arena, from.domain_),
        overload_(arena, from.overload_) {}

NodeProto::NodeProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NodeProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, NodeProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:onnx.NodeProto)
}
PROTOBUF_NDEBUG_INLINE NodeProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        input_{visibility, arena},
        output_{visibility, arena},
        attribute_{visibility, arena},
        metadata_props_{visibility, arena},
        device_configurations_{visibility, arena},
        name_(arena),
        op_type_(arena),
        doc_string_(arena),
        domain_(arena),
        overload_(arena) {}

inline void NodeProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeProto::~NodeProto() {
  // @@protoc_insertion_point(destructor:onnx.NodeProto)
  SharedDtor(*this);
}
inline void NodeProto::SharedDtor(MessageLite& self) {
  NodeProto& this_ = static_cast<NodeProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.op_type_.Destroy();
  this_._impl_.doc_string_.Destroy();
  this_._impl_.domain_.Destroy();
  this_._impl_.overload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NodeProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NodeProto(arena);
}
constexpr auto NodeProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.input_) +
          decltype(NodeProto::_impl_.input_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.output_) +
          decltype(NodeProto::_impl_.output_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.attribute_) +
          decltype(NodeProto::_impl_.attribute_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.metadata_props_) +
          decltype(NodeProto::_impl_.metadata_props_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.device_configurations_) +
          decltype(NodeProto::_impl_.device_configurations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NodeProto), alignof(NodeProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeProto::PlacementNew_,
                                 sizeof(NodeProto),
                                 alignof(NodeProto));
  }
}
constexpr auto NodeProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<15>{
      {
          &_NodeProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NodeProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<NodeProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NodeProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<NodeProto>(), &NodeProto::ByteSizeLong,
              &NodeProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NodeProto, _impl_._cached_size_),
          true,
      },
      "onnx.NodeProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<15> NodeProto_class_data_ =
    NodeProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NodeProto::GetClassData() const {
  return NodeProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 3, 0, 2>
NodeProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeProto, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NodeProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::NodeProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string input = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.input_)}},
    // repeated string output = 2;
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.output_)}},
    // optional string name = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.name_)}},
    // optional string op_type = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.op_type_)}},
    // repeated .onnx.AttributeProto attribute = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.attribute_)}},
    // optional string doc_string = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.doc_string_)}},
    // optional string domain = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.domain_)}},
    // optional string overload = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 4, 0, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.overload_)}},
    // repeated .onnx.StringStringEntryProto metadata_props = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.metadata_props_)}},
    // repeated .onnx.NodeDeviceConfigurationProto device_configurations = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 2, PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.device_configurations_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string input = 1;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.input_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated string output = 2;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.output_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // optional string name = 3;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string op_type = 4;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.op_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.AttributeProto attribute = 5;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.attribute_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string doc_string = 6;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.doc_string_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string domain = 7;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.domain_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string overload = 8;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.overload_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.StringStringEntryProto metadata_props = 9;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.metadata_props_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.NodeDeviceConfigurationProto device_configurations = 10;
    {PROTOBUF_FIELD_OFFSET(NodeProto, _impl_.device_configurations_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::AttributeProto>()},
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
      {::_pbi::TcParser::GetTable<::onnx::NodeDeviceConfigurationProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NodeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.NodeProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_.Clear();
  _impl_.output_.Clear();
  _impl_.attribute_.Clear();
  _impl_.metadata_props_.Clear();
  _impl_.device_configurations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.op_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.doc_string_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.domain_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.overload_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NodeProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NodeProto& this_ = static_cast<const NodeProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NodeProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NodeProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.NodeProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string input = 1;
  for (int i = 0, n = this_._internal_input_size(); i < n; ++i) {
    const auto& s = this_._internal_input().Get(i);
    target = stream->WriteString(1, s, target);
  }

  // repeated string output = 2;
  for (int i = 0, n = this_._internal_output_size(); i < n; ++i) {
    const auto& s = this_._internal_output().Get(i);
    target = stream->WriteString(2, s, target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_name();
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string op_type = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_op_type();
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated .onnx.AttributeProto attribute = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_attribute_size());
       i < n; i++) {
    const auto& repfield = this_._internal_attribute().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional string doc_string = 6;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const ::std::string& _s = this_._internal_doc_string();
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string domain = 7;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const ::std::string& _s = this_._internal_domain();
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string overload = 8;
  if ((cached_has_bits & 0x00000010u) != 0) {
    const ::std::string& _s = this_._internal_overload();
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 9;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_metadata_props_size());
       i < n; i++) {
    const auto& repfield = this_._internal_metadata_props().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.NodeDeviceConfigurationProto device_configurations = 10;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_device_configurations_size());
       i < n; i++) {
    const auto& repfield = this_._internal_device_configurations().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            10, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.NodeProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NodeProto::ByteSizeLong(const MessageLite& base) {
  const NodeProto& this_ = static_cast<const NodeProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NodeProto::ByteSizeLong() const {
  const NodeProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.NodeProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string input = 1;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_input().size());
      for (int i = 0, n = this_._internal_input().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_input().Get(i));
      }
    }
    // repeated string output = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_output().size());
      for (int i = 0, n = this_._internal_output().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_output().Get(i));
      }
    }
    // repeated .onnx.AttributeProto attribute = 5;
    {
      total_size += 1UL * this_._internal_attribute_size();
      for (const auto& msg : this_._internal_attribute()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.StringStringEntryProto metadata_props = 9;
    {
      total_size += 1UL * this_._internal_metadata_props_size();
      for (const auto& msg : this_._internal_metadata_props()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.NodeDeviceConfigurationProto device_configurations = 10;
    {
      total_size += 1UL * this_._internal_device_configurations_size();
      for (const auto& msg : this_._internal_device_configurations()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional string name = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional string op_type = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_op_type());
    }
    // optional string doc_string = 6;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_doc_string());
    }
    // optional string domain = 7;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_domain());
    }
    // optional string overload = 8;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_overload());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void NodeProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeProto*>(&to_msg);
  auto& from = static_cast<const NodeProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.NodeProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input()->MergeFrom(from._internal_input());
  _this->_internal_mutable_output()->MergeFrom(from._internal_output());
  _this->_internal_mutable_attribute()->MergeFrom(
      from._internal_attribute());
  _this->_internal_mutable_metadata_props()->MergeFrom(
      from._internal_metadata_props());
  _this->_internal_mutable_device_configurations()->MergeFrom(
      from._internal_device_configurations());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_op_type(from._internal_op_type());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_doc_string(from._internal_doc_string());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_domain(from._internal_domain());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_internal_set_overload(from._internal_overload());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void NodeProto::CopyFrom(const NodeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.NodeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeProto::InternalSwap(NodeProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_.InternalSwap(&other->_impl_.input_);
  _impl_.output_.InternalSwap(&other->_impl_.output_);
  _impl_.attribute_.InternalSwap(&other->_impl_.attribute_);
  _impl_.metadata_props_.InternalSwap(&other->_impl_.metadata_props_);
  _impl_.device_configurations_.InternalSwap(&other->_impl_.device_configurations_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_type_, &other->_impl_.op_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.doc_string_, &other->_impl_.doc_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.overload_, &other->_impl_.overload_, arena);
}

// ===================================================================

class IntIntListEntryProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<IntIntListEntryProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IntIntListEntryProto, _impl_._has_bits_);
};

IntIntListEntryProto::IntIntListEntryProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, IntIntListEntryProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.IntIntListEntryProto)
}
PROTOBUF_NDEBUG_INLINE IntIntListEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::IntIntListEntryProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        value_{visibility, arena, from.value_} {}

IntIntListEntryProto::IntIntListEntryProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const IntIntListEntryProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, IntIntListEntryProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IntIntListEntryProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.key_ = from._impl_.key_;

  // @@protoc_insertion_point(copy_constructor:onnx.IntIntListEntryProto)
}
PROTOBUF_NDEBUG_INLINE IntIntListEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        value_{visibility, arena} {}

inline void IntIntListEntryProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.key_ = {};
}
IntIntListEntryProto::~IntIntListEntryProto() {
  // @@protoc_insertion_point(destructor:onnx.IntIntListEntryProto)
  SharedDtor(*this);
}
inline void IntIntListEntryProto::SharedDtor(MessageLite& self) {
  IntIntListEntryProto& this_ = static_cast<IntIntListEntryProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IntIntListEntryProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IntIntListEntryProto(arena);
}
constexpr auto IntIntListEntryProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(IntIntListEntryProto, _impl_.value_) +
          decltype(IntIntListEntryProto::_impl_.value_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(IntIntListEntryProto), alignof(IntIntListEntryProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&IntIntListEntryProto::PlacementNew_,
                                 sizeof(IntIntListEntryProto),
                                 alignof(IntIntListEntryProto));
  }
}
constexpr auto IntIntListEntryProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<26>{
      {
          &_IntIntListEntryProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IntIntListEntryProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<IntIntListEntryProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IntIntListEntryProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<IntIntListEntryProto>(), &IntIntListEntryProto::ByteSizeLong,
              &IntIntListEntryProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IntIntListEntryProto, _impl_._cached_size_),
          true,
      },
      "onnx.IntIntListEntryProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<26> IntIntListEntryProto_class_data_ =
    IntIntListEntryProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
IntIntListEntryProto::GetClassData() const {
  return IntIntListEntryProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
IntIntListEntryProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IntIntListEntryProto, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    IntIntListEntryProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::IntIntListEntryProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int64 value = 2;
    {::_pbi::TcParser::FastV64R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(IntIntListEntryProto, _impl_.value_)}},
    // optional int64 key = 1;
    {::_pbi::TcParser::FastV64S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(IntIntListEntryProto, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 key = 1;
    {PROTOBUF_FIELD_OFFSET(IntIntListEntryProto, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated int64 value = 2;
    {PROTOBUF_FIELD_OFFSET(IntIntListEntryProto, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void IntIntListEntryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.IntIntListEntryProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _impl_.key_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IntIntListEntryProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IntIntListEntryProto& this_ = static_cast<const IntIntListEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IntIntListEntryProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IntIntListEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.IntIntListEntryProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int64 key = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
            stream, this_._internal_key(), target);
  }

  // repeated int64 value = 2;
  for (int i = 0, n = this_._internal_value_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this_._internal_value().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.IntIntListEntryProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IntIntListEntryProto::ByteSizeLong(const MessageLite& base) {
  const IntIntListEntryProto& this_ = static_cast<const IntIntListEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IntIntListEntryProto::ByteSizeLong() const {
  const IntIntListEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.IntIntListEntryProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int64 value = 2;
    {
      ::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
          this_._internal_value());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_value_size());
      total_size += tag_size + data_size;
    }
  }
   {
    // optional int64 key = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_key());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void IntIntListEntryProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IntIntListEntryProto*>(&to_msg);
  auto& from = static_cast<const IntIntListEntryProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.IntIntListEntryProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_value()->MergeFrom(from._internal_value());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.key_ = from._impl_.key_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void IntIntListEntryProto::CopyFrom(const IntIntListEntryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.IntIntListEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IntIntListEntryProto::InternalSwap(IntIntListEntryProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
  swap(_impl_.key_, other->_impl_.key_);
}

// ===================================================================

class NodeDeviceConfigurationProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NodeDeviceConfigurationProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_._has_bits_);
};

NodeDeviceConfigurationProto::NodeDeviceConfigurationProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, NodeDeviceConfigurationProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.NodeDeviceConfigurationProto)
}
PROTOBUF_NDEBUG_INLINE NodeDeviceConfigurationProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::NodeDeviceConfigurationProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sharding_spec_{visibility, arena, from.sharding_spec_},
        configuration_id_(arena, from.configuration_id_) {}

NodeDeviceConfigurationProto::NodeDeviceConfigurationProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NodeDeviceConfigurationProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, NodeDeviceConfigurationProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeDeviceConfigurationProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.pipeline_stage_ = from._impl_.pipeline_stage_;

  // @@protoc_insertion_point(copy_constructor:onnx.NodeDeviceConfigurationProto)
}
PROTOBUF_NDEBUG_INLINE NodeDeviceConfigurationProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        sharding_spec_{visibility, arena},
        configuration_id_(arena) {}

inline void NodeDeviceConfigurationProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pipeline_stage_ = {};
}
NodeDeviceConfigurationProto::~NodeDeviceConfigurationProto() {
  // @@protoc_insertion_point(destructor:onnx.NodeDeviceConfigurationProto)
  SharedDtor(*this);
}
inline void NodeDeviceConfigurationProto::SharedDtor(MessageLite& self) {
  NodeDeviceConfigurationProto& this_ = static_cast<NodeDeviceConfigurationProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.configuration_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NodeDeviceConfigurationProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NodeDeviceConfigurationProto(arena);
}
constexpr auto NodeDeviceConfigurationProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_.sharding_spec_) +
          decltype(NodeDeviceConfigurationProto::_impl_.sharding_spec_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NodeDeviceConfigurationProto), alignof(NodeDeviceConfigurationProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeDeviceConfigurationProto::PlacementNew_,
                                 sizeof(NodeDeviceConfigurationProto),
                                 alignof(NodeDeviceConfigurationProto));
  }
}
constexpr auto NodeDeviceConfigurationProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<34>{
      {
          &_NodeDeviceConfigurationProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NodeDeviceConfigurationProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<NodeDeviceConfigurationProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NodeDeviceConfigurationProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<NodeDeviceConfigurationProto>(), &NodeDeviceConfigurationProto::ByteSizeLong,
              &NodeDeviceConfigurationProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_._cached_size_),
          true,
      },
      "onnx.NodeDeviceConfigurationProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<34> NodeDeviceConfigurationProto_class_data_ =
    NodeDeviceConfigurationProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NodeDeviceConfigurationProto::GetClassData() const {
  return NodeDeviceConfigurationProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
NodeDeviceConfigurationProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NodeDeviceConfigurationProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::NodeDeviceConfigurationProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string configuration_id = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_.configuration_id_)}},
    // repeated .onnx.ShardingSpecProto sharding_spec = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_.sharding_spec_)}},
    // optional int32 pipeline_stage = 3;
    {::_pbi::TcParser::FastV32S1,
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_.pipeline_stage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string configuration_id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_.configuration_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.ShardingSpecProto sharding_spec = 2;
    {PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_.sharding_spec_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 pipeline_stage = 3;
    {PROTOBUF_FIELD_OFFSET(NodeDeviceConfigurationProto, _impl_.pipeline_stage_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::ShardingSpecProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NodeDeviceConfigurationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.NodeDeviceConfigurationProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sharding_spec_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.configuration_id_.ClearNonDefaultToEmpty();
  }
  _impl_.pipeline_stage_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NodeDeviceConfigurationProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NodeDeviceConfigurationProto& this_ = static_cast<const NodeDeviceConfigurationProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NodeDeviceConfigurationProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NodeDeviceConfigurationProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.NodeDeviceConfigurationProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string configuration_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_configuration_id();
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .onnx.ShardingSpecProto sharding_spec = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_sharding_spec_size());
       i < n; i++) {
    const auto& repfield = this_._internal_sharding_spec().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional int32 pipeline_stage = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_pipeline_stage(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.NodeDeviceConfigurationProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NodeDeviceConfigurationProto::ByteSizeLong(const MessageLite& base) {
  const NodeDeviceConfigurationProto& this_ = static_cast<const NodeDeviceConfigurationProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NodeDeviceConfigurationProto::ByteSizeLong() const {
  const NodeDeviceConfigurationProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.NodeDeviceConfigurationProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .onnx.ShardingSpecProto sharding_spec = 2;
    {
      total_size += 1UL * this_._internal_sharding_spec_size();
      for (const auto& msg : this_._internal_sharding_spec()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string configuration_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_configuration_id());
    }
    // optional int32 pipeline_stage = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_pipeline_stage());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void NodeDeviceConfigurationProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeDeviceConfigurationProto*>(&to_msg);
  auto& from = static_cast<const NodeDeviceConfigurationProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.NodeDeviceConfigurationProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sharding_spec()->MergeFrom(
      from._internal_sharding_spec());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_configuration_id(from._internal_configuration_id());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.pipeline_stage_ = from._impl_.pipeline_stage_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void NodeDeviceConfigurationProto::CopyFrom(const NodeDeviceConfigurationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.NodeDeviceConfigurationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeDeviceConfigurationProto::InternalSwap(NodeDeviceConfigurationProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sharding_spec_.InternalSwap(&other->_impl_.sharding_spec_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.configuration_id_, &other->_impl_.configuration_id_, arena);
  swap(_impl_.pipeline_stage_, other->_impl_.pipeline_stage_);
}

// ===================================================================

class ShardingSpecProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ShardingSpecProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_._has_bits_);
};

ShardingSpecProto::ShardingSpecProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, ShardingSpecProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.ShardingSpecProto)
}
PROTOBUF_NDEBUG_INLINE ShardingSpecProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::ShardingSpecProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_{visibility, arena, from.device_},
        index_to_device_group_map_{visibility, arena, from.index_to_device_group_map_},
        sharded_dim_{visibility, arena, from.sharded_dim_},
        tensor_name_(arena, from.tensor_name_) {}

ShardingSpecProto::ShardingSpecProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ShardingSpecProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, ShardingSpecProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ShardingSpecProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:onnx.ShardingSpecProto)
}
PROTOBUF_NDEBUG_INLINE ShardingSpecProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_{visibility, arena},
        index_to_device_group_map_{visibility, arena},
        sharded_dim_{visibility, arena},
        tensor_name_(arena) {}

inline void ShardingSpecProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ShardingSpecProto::~ShardingSpecProto() {
  // @@protoc_insertion_point(destructor:onnx.ShardingSpecProto)
  SharedDtor(*this);
}
inline void ShardingSpecProto::SharedDtor(MessageLite& self) {
  ShardingSpecProto& this_ = static_cast<ShardingSpecProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tensor_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ShardingSpecProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ShardingSpecProto(arena);
}
constexpr auto ShardingSpecProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.device_) +
          decltype(ShardingSpecProto::_impl_.device_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.index_to_device_group_map_) +
          decltype(ShardingSpecProto::_impl_.index_to_device_group_map_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.sharded_dim_) +
          decltype(ShardingSpecProto::_impl_.sharded_dim_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ShardingSpecProto), alignof(ShardingSpecProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ShardingSpecProto::PlacementNew_,
                                 sizeof(ShardingSpecProto),
                                 alignof(ShardingSpecProto));
  }
}
constexpr auto ShardingSpecProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<23>{
      {
          &_ShardingSpecProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ShardingSpecProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<ShardingSpecProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ShardingSpecProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<ShardingSpecProto>(), &ShardingSpecProto::ByteSizeLong,
              &ShardingSpecProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_._cached_size_),
          true,
      },
      "onnx.ShardingSpecProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<23> ShardingSpecProto_class_data_ =
    ShardingSpecProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ShardingSpecProto::GetClassData() const {
  return ShardingSpecProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
ShardingSpecProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ShardingSpecProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::ShardingSpecProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .onnx.ShardedDimProto sharded_dim = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.sharded_dim_)}},
    // optional string tensor_name = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.tensor_name_)}},
    // repeated int64 device = 2;
    {::_pbi::TcParser::FastV64R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.device_)}},
    // repeated .onnx.IntIntListEntryProto index_to_device_group_map = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.index_to_device_group_map_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string tensor_name = 1;
    {PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.tensor_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated int64 device = 2;
    {PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.device_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // repeated .onnx.IntIntListEntryProto index_to_device_group_map = 3;
    {PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.index_to_device_group_map_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.ShardedDimProto sharded_dim = 4;
    {PROTOBUF_FIELD_OFFSET(ShardingSpecProto, _impl_.sharded_dim_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::IntIntListEntryProto>()},
      {::_pbi::TcParser::GetTable<::onnx::ShardedDimProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ShardingSpecProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.ShardingSpecProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_.Clear();
  _impl_.index_to_device_group_map_.Clear();
  _impl_.sharded_dim_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.tensor_name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ShardingSpecProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ShardingSpecProto& this_ = static_cast<const ShardingSpecProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ShardingSpecProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ShardingSpecProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.ShardingSpecProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string tensor_name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_tensor_name();
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated int64 device = 2;
  for (int i = 0, n = this_._internal_device_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        2, this_._internal_device().Get(i), target);
  }

  // repeated .onnx.IntIntListEntryProto index_to_device_group_map = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_index_to_device_group_map_size());
       i < n; i++) {
    const auto& repfield = this_._internal_index_to_device_group_map().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.ShardedDimProto sharded_dim = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_sharded_dim_size());
       i < n; i++) {
    const auto& repfield = this_._internal_sharded_dim().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.ShardingSpecProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ShardingSpecProto::ByteSizeLong(const MessageLite& base) {
  const ShardingSpecProto& this_ = static_cast<const ShardingSpecProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ShardingSpecProto::ByteSizeLong() const {
  const ShardingSpecProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.ShardingSpecProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int64 device = 2;
    {
      ::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
          this_._internal_device());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_device_size());
      total_size += tag_size + data_size;
    }
    // repeated .onnx.IntIntListEntryProto index_to_device_group_map = 3;
    {
      total_size += 1UL * this_._internal_index_to_device_group_map_size();
      for (const auto& msg : this_._internal_index_to_device_group_map()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.ShardedDimProto sharded_dim = 4;
    {
      total_size += 1UL * this_._internal_sharded_dim_size();
      for (const auto& msg : this_._internal_sharded_dim()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional string tensor_name = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_tensor_name());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void ShardingSpecProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ShardingSpecProto*>(&to_msg);
  auto& from = static_cast<const ShardingSpecProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.ShardingSpecProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device()->MergeFrom(from._internal_device());
  _this->_internal_mutable_index_to_device_group_map()->MergeFrom(
      from._internal_index_to_device_group_map());
  _this->_internal_mutable_sharded_dim()->MergeFrom(
      from._internal_sharded_dim());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_tensor_name(from._internal_tensor_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ShardingSpecProto::CopyFrom(const ShardingSpecProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.ShardingSpecProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ShardingSpecProto::InternalSwap(ShardingSpecProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.device_.InternalSwap(&other->_impl_.device_);
  _impl_.index_to_device_group_map_.InternalSwap(&other->_impl_.index_to_device_group_map_);
  _impl_.sharded_dim_.InternalSwap(&other->_impl_.sharded_dim_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tensor_name_, &other->_impl_.tensor_name_, arena);
}

// ===================================================================

class ShardedDimProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ShardedDimProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ShardedDimProto, _impl_._has_bits_);
};

ShardedDimProto::ShardedDimProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, ShardedDimProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.ShardedDimProto)
}
PROTOBUF_NDEBUG_INLINE ShardedDimProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::ShardedDimProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        simple_sharding_{visibility, arena, from.simple_sharding_} {}

ShardedDimProto::ShardedDimProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ShardedDimProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, ShardedDimProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ShardedDimProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.axis_ = from._impl_.axis_;

  // @@protoc_insertion_point(copy_constructor:onnx.ShardedDimProto)
}
PROTOBUF_NDEBUG_INLINE ShardedDimProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        simple_sharding_{visibility, arena} {}

inline void ShardedDimProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.axis_ = {};
}
ShardedDimProto::~ShardedDimProto() {
  // @@protoc_insertion_point(destructor:onnx.ShardedDimProto)
  SharedDtor(*this);
}
inline void ShardedDimProto::SharedDtor(MessageLite& self) {
  ShardedDimProto& this_ = static_cast<ShardedDimProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ShardedDimProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ShardedDimProto(arena);
}
constexpr auto ShardedDimProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ShardedDimProto, _impl_.simple_sharding_) +
          decltype(ShardedDimProto::_impl_.simple_sharding_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ShardedDimProto), alignof(ShardedDimProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ShardedDimProto::PlacementNew_,
                                 sizeof(ShardedDimProto),
                                 alignof(ShardedDimProto));
  }
}
constexpr auto ShardedDimProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<21>{
      {
          &_ShardedDimProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ShardedDimProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<ShardedDimProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ShardedDimProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<ShardedDimProto>(), &ShardedDimProto::ByteSizeLong,
              &ShardedDimProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ShardedDimProto, _impl_._cached_size_),
          true,
      },
      "onnx.ShardedDimProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<21> ShardedDimProto_class_data_ =
    ShardedDimProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ShardedDimProto::GetClassData() const {
  return ShardedDimProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
ShardedDimProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ShardedDimProto, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ShardedDimProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::ShardedDimProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .onnx.SimpleShardedDimProto simple_sharding = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ShardedDimProto, _impl_.simple_sharding_)}},
    // optional int64 axis = 1;
    {::_pbi::TcParser::FastV64S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ShardedDimProto, _impl_.axis_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 axis = 1;
    {PROTOBUF_FIELD_OFFSET(ShardedDimProto, _impl_.axis_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated .onnx.SimpleShardedDimProto simple_sharding = 2;
    {PROTOBUF_FIELD_OFFSET(ShardedDimProto, _impl_.simple_sharding_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::SimpleShardedDimProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ShardedDimProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.ShardedDimProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simple_sharding_.Clear();
  _impl_.axis_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ShardedDimProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ShardedDimProto& this_ = static_cast<const ShardedDimProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ShardedDimProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ShardedDimProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.ShardedDimProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int64 axis = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
            stream, this_._internal_axis(), target);
  }

  // repeated .onnx.SimpleShardedDimProto simple_sharding = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_simple_sharding_size());
       i < n; i++) {
    const auto& repfield = this_._internal_simple_sharding().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.ShardedDimProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ShardedDimProto::ByteSizeLong(const MessageLite& base) {
  const ShardedDimProto& this_ = static_cast<const ShardedDimProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ShardedDimProto::ByteSizeLong() const {
  const ShardedDimProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.ShardedDimProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .onnx.SimpleShardedDimProto simple_sharding = 2;
    {
      total_size += 1UL * this_._internal_simple_sharding_size();
      for (const auto& msg : this_._internal_simple_sharding()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional int64 axis = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_axis());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void ShardedDimProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ShardedDimProto*>(&to_msg);
  auto& from = static_cast<const ShardedDimProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.ShardedDimProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_simple_sharding()->MergeFrom(
      from._internal_simple_sharding());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.axis_ = from._impl_.axis_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ShardedDimProto::CopyFrom(const ShardedDimProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.ShardedDimProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ShardedDimProto::InternalSwap(ShardedDimProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.simple_sharding_.InternalSwap(&other->_impl_.simple_sharding_);
  swap(_impl_.axis_, other->_impl_.axis_);
}

// ===================================================================

class SimpleShardedDimProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SimpleShardedDimProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SimpleShardedDimProto, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::onnx::SimpleShardedDimProto, _impl_._oneof_case_);
};

SimpleShardedDimProto::SimpleShardedDimProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, SimpleShardedDimProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.SimpleShardedDimProto)
}
PROTOBUF_NDEBUG_INLINE SimpleShardedDimProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::SimpleShardedDimProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dim_{},
        _oneof_case_{from._oneof_case_[0]} {}

SimpleShardedDimProto::SimpleShardedDimProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SimpleShardedDimProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, SimpleShardedDimProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SimpleShardedDimProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.num_shards_ = from._impl_.num_shards_;
  switch (dim_case()) {
    case DIM_NOT_SET:
      break;
      case kDimValue:
        _impl_.dim_.dim_value_ = from._impl_.dim_.dim_value_;
        break;
      case kDimParam:
        new (&_impl_.dim_.dim_param_) decltype(_impl_.dim_.dim_param_){arena, from._impl_.dim_.dim_param_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:onnx.SimpleShardedDimProto)
}
PROTOBUF_NDEBUG_INLINE SimpleShardedDimProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        dim_{},
        _oneof_case_{} {}

inline void SimpleShardedDimProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.num_shards_ = {};
}
SimpleShardedDimProto::~SimpleShardedDimProto() {
  // @@protoc_insertion_point(destructor:onnx.SimpleShardedDimProto)
  SharedDtor(*this);
}
inline void SimpleShardedDimProto::SharedDtor(MessageLite& self) {
  SimpleShardedDimProto& this_ = static_cast<SimpleShardedDimProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_dim()) {
    this_.clear_dim();
  }
  this_._impl_.~Impl_();
}

void SimpleShardedDimProto::clear_dim() {
// @@protoc_insertion_point(one_of_clear_start:onnx.SimpleShardedDimProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (dim_case()) {
    case kDimValue: {
      // No need to clear
      break;
    }
    case kDimParam: {
      _impl_.dim_.dim_param_.Destroy();
      break;
    }
    case DIM_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DIM_NOT_SET;
}


inline void* PROTOBUF_NONNULL SimpleShardedDimProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SimpleShardedDimProto(arena);
}
constexpr auto SimpleShardedDimProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SimpleShardedDimProto),
                                            alignof(SimpleShardedDimProto));
}
constexpr auto SimpleShardedDimProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<27>{
      {
          &_SimpleShardedDimProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SimpleShardedDimProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<SimpleShardedDimProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SimpleShardedDimProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<SimpleShardedDimProto>(), &SimpleShardedDimProto::ByteSizeLong,
              &SimpleShardedDimProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SimpleShardedDimProto, _impl_._cached_size_),
          true,
      },
      "onnx.SimpleShardedDimProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<27> SimpleShardedDimProto_class_data_ =
    SimpleShardedDimProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SimpleShardedDimProto::GetClassData() const {
  return SimpleShardedDimProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 0, 2>
SimpleShardedDimProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SimpleShardedDimProto, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SimpleShardedDimProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::SimpleShardedDimProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 num_shards = 3;
    {::_pbi::TcParser::FastV64S1,
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(SimpleShardedDimProto, _impl_.num_shards_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 dim_value = 1;
    {PROTOBUF_FIELD_OFFSET(SimpleShardedDimProto, _impl_.dim_.dim_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // string dim_param = 2;
    {PROTOBUF_FIELD_OFFSET(SimpleShardedDimProto, _impl_.dim_.dim_param_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int64 num_shards = 3;
    {PROTOBUF_FIELD_OFFSET(SimpleShardedDimProto, _impl_.num_shards_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SimpleShardedDimProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.SimpleShardedDimProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_shards_ = ::int64_t{0};
  clear_dim();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SimpleShardedDimProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SimpleShardedDimProto& this_ = static_cast<const SimpleShardedDimProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SimpleShardedDimProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SimpleShardedDimProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.SimpleShardedDimProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.dim_case()) {
    case kDimValue: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_dim_value(), target);
      break;
    }
    case kDimParam: {
      const ::std::string& _s = this_._internal_dim_param();
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    default:
      break;
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int64 num_shards = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
            stream, this_._internal_num_shards(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.SimpleShardedDimProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SimpleShardedDimProto::ByteSizeLong(const MessageLite& base) {
  const SimpleShardedDimProto& this_ = static_cast<const SimpleShardedDimProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SimpleShardedDimProto::ByteSizeLong() const {
  const SimpleShardedDimProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.SimpleShardedDimProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional int64 num_shards = 3;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_num_shards());
    }
  }
  switch (this_.dim_case()) {
    // int64 dim_value = 1;
    case kDimValue: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_dim_value());
      break;
    }
    // string dim_param = 2;
    case kDimParam: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_dim_param());
      break;
    }
    case DIM_NOT_SET: {
      break;
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void SimpleShardedDimProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimpleShardedDimProto*>(&to_msg);
  auto& from = static_cast<const SimpleShardedDimProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.SimpleShardedDimProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.num_shards_ = from._impl_.num_shards_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_dim();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDimValue: {
        _this->_impl_.dim_.dim_value_ = from._impl_.dim_.dim_value_;
        break;
      }
      case kDimParam: {
        if (oneof_needs_init) {
          _this->_impl_.dim_.dim_param_.InitDefault();
        }
        _this->_impl_.dim_.dim_param_.Set(from._internal_dim_param(), arena);
        break;
      }
      case DIM_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void SimpleShardedDimProto::CopyFrom(const SimpleShardedDimProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.SimpleShardedDimProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimpleShardedDimProto::InternalSwap(SimpleShardedDimProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.num_shards_, other->_impl_.num_shards_);
  swap(_impl_.dim_, other->_impl_.dim_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// ===================================================================

class TrainingInfoProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TrainingInfoProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_._has_bits_);
};

TrainingInfoProto::TrainingInfoProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TrainingInfoProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TrainingInfoProto)
}
PROTOBUF_NDEBUG_INLINE TrainingInfoProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TrainingInfoProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        initialization_binding_{visibility, arena, from.initialization_binding_},
        update_binding_{visibility, arena, from.update_binding_} {}

TrainingInfoProto::TrainingInfoProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TrainingInfoProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TrainingInfoProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TrainingInfoProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.initialization_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.initialization_)
                : nullptr;
  _impl_.algorithm_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.algorithm_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:onnx.TrainingInfoProto)
}
PROTOBUF_NDEBUG_INLINE TrainingInfoProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        initialization_binding_{visibility, arena},
        update_binding_{visibility, arena} {}

inline void TrainingInfoProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initialization_),
           0,
           offsetof(Impl_, algorithm_) -
               offsetof(Impl_, initialization_) +
               sizeof(Impl_::algorithm_));
}
TrainingInfoProto::~TrainingInfoProto() {
  // @@protoc_insertion_point(destructor:onnx.TrainingInfoProto)
  SharedDtor(*this);
}
inline void TrainingInfoProto::SharedDtor(MessageLite& self) {
  TrainingInfoProto& this_ = static_cast<TrainingInfoProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.initialization_;
  delete this_._impl_.algorithm_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TrainingInfoProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TrainingInfoProto(arena);
}
constexpr auto TrainingInfoProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.initialization_binding_) +
          decltype(TrainingInfoProto::_impl_.initialization_binding_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.update_binding_) +
          decltype(TrainingInfoProto::_impl_.update_binding_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TrainingInfoProto), alignof(TrainingInfoProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TrainingInfoProto::PlacementNew_,
                                 sizeof(TrainingInfoProto),
                                 alignof(TrainingInfoProto));
  }
}
constexpr auto TrainingInfoProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<23>{
      {
          &_TrainingInfoProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TrainingInfoProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TrainingInfoProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TrainingInfoProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TrainingInfoProto>(), &TrainingInfoProto::ByteSizeLong,
              &TrainingInfoProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_._cached_size_),
          true,
      },
      "onnx.TrainingInfoProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<23> TrainingInfoProto_class_data_ =
    TrainingInfoProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TrainingInfoProto::GetClassData() const {
  return TrainingInfoProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
TrainingInfoProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TrainingInfoProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TrainingInfoProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .onnx.StringStringEntryProto update_binding = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.update_binding_)}},
    // optional .onnx.GraphProto initialization = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.initialization_)}},
    // optional .onnx.GraphProto algorithm = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.algorithm_)}},
    // repeated .onnx.StringStringEntryProto initialization_binding = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.initialization_binding_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .onnx.GraphProto initialization = 1;
    {PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.initialization_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .onnx.GraphProto algorithm = 2;
    {PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.algorithm_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.StringStringEntryProto initialization_binding = 3;
    {PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.initialization_binding_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.StringStringEntryProto update_binding = 4;
    {PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.update_binding_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::GraphProto>()},
      {::_pbi::TcParser::GetTable<::onnx::GraphProto>()},
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TrainingInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TrainingInfoProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.initialization_binding_.Clear();
  _impl_.update_binding_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.initialization_ != nullptr);
      _impl_.initialization_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.algorithm_ != nullptr);
      _impl_.algorithm_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TrainingInfoProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TrainingInfoProto& this_ = static_cast<const TrainingInfoProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TrainingInfoProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TrainingInfoProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TrainingInfoProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .onnx.GraphProto initialization = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.initialization_, this_._impl_.initialization_->GetCachedSize(), target,
        stream);
  }

  // optional .onnx.GraphProto algorithm = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.algorithm_, this_._impl_.algorithm_->GetCachedSize(), target,
        stream);
  }

  // repeated .onnx.StringStringEntryProto initialization_binding = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_initialization_binding_size());
       i < n; i++) {
    const auto& repfield = this_._internal_initialization_binding().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.StringStringEntryProto update_binding = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_update_binding_size());
       i < n; i++) {
    const auto& repfield = this_._internal_update_binding().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TrainingInfoProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TrainingInfoProto::ByteSizeLong(const MessageLite& base) {
  const TrainingInfoProto& this_ = static_cast<const TrainingInfoProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TrainingInfoProto::ByteSizeLong() const {
  const TrainingInfoProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TrainingInfoProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .onnx.StringStringEntryProto initialization_binding = 3;
    {
      total_size += 1UL * this_._internal_initialization_binding_size();
      for (const auto& msg : this_._internal_initialization_binding()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.StringStringEntryProto update_binding = 4;
    {
      total_size += 1UL * this_._internal_update_binding_size();
      for (const auto& msg : this_._internal_update_binding()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .onnx.GraphProto initialization = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initialization_);
    }
    // optional .onnx.GraphProto algorithm = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.algorithm_);
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TrainingInfoProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TrainingInfoProto*>(&to_msg);
  auto& from = static_cast<const TrainingInfoProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TrainingInfoProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_initialization_binding()->MergeFrom(
      from._internal_initialization_binding());
  _this->_internal_mutable_update_binding()->MergeFrom(
      from._internal_update_binding());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.initialization_ != nullptr);
      if (_this->_impl_.initialization_ == nullptr) {
        _this->_impl_.initialization_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.initialization_);
      } else {
        _this->_impl_.initialization_->MergeFrom(*from._impl_.initialization_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.algorithm_ != nullptr);
      if (_this->_impl_.algorithm_ == nullptr) {
        _this->_impl_.algorithm_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.algorithm_);
      } else {
        _this->_impl_.algorithm_->MergeFrom(*from._impl_.algorithm_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TrainingInfoProto::CopyFrom(const TrainingInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TrainingInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TrainingInfoProto::InternalSwap(TrainingInfoProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.initialization_binding_.InternalSwap(&other->_impl_.initialization_binding_);
  _impl_.update_binding_.InternalSwap(&other->_impl_.update_binding_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.algorithm_)
      + sizeof(TrainingInfoProto::_impl_.algorithm_)
      - PROTOBUF_FIELD_OFFSET(TrainingInfoProto, _impl_.initialization_)>(
          reinterpret_cast<char*>(&_impl_.initialization_),
          reinterpret_cast<char*>(&other->_impl_.initialization_));
}

// ===================================================================

class ModelProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModelProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModelProto, _impl_._has_bits_);
};

ModelProto::ModelProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, ModelProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.ModelProto)
}
PROTOBUF_NDEBUG_INLINE ModelProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::ModelProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        opset_import_{visibility, arena, from.opset_import_},
        metadata_props_{visibility, arena, from.metadata_props_},
        training_info_{visibility, arena, from.training_info_},
        functions_{visibility, arena, from.functions_},
        configuration_{visibility, arena, from.configuration_},
        producer_name_(arena, from.producer_name_),
        producer_version_(arena, from.producer_version_),
        domain_(arena, from.domain_),
        doc_string_(arena, from.doc_string_) {}

ModelProto::ModelProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ModelProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, ModelProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModelProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.graph_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.graph_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ir_version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ir_version_),
           offsetof(Impl_, model_version_) -
               offsetof(Impl_, ir_version_) +
               sizeof(Impl_::model_version_));

  // @@protoc_insertion_point(copy_constructor:onnx.ModelProto)
}
PROTOBUF_NDEBUG_INLINE ModelProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        opset_import_{visibility, arena},
        metadata_props_{visibility, arena},
        training_info_{visibility, arena},
        functions_{visibility, arena},
        configuration_{visibility, arena},
        producer_name_(arena),
        producer_version_(arena),
        domain_(arena),
        doc_string_(arena) {}

inline void ModelProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, graph_),
           0,
           offsetof(Impl_, model_version_) -
               offsetof(Impl_, graph_) +
               sizeof(Impl_::model_version_));
}
ModelProto::~ModelProto() {
  // @@protoc_insertion_point(destructor:onnx.ModelProto)
  SharedDtor(*this);
}
inline void ModelProto::SharedDtor(MessageLite& self) {
  ModelProto& this_ = static_cast<ModelProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.producer_name_.Destroy();
  this_._impl_.producer_version_.Destroy();
  this_._impl_.domain_.Destroy();
  this_._impl_.doc_string_.Destroy();
  delete this_._impl_.graph_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModelProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModelProto(arena);
}
constexpr auto ModelProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.opset_import_) +
          decltype(ModelProto::_impl_.opset_import_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.metadata_props_) +
          decltype(ModelProto::_impl_.metadata_props_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.training_info_) +
          decltype(ModelProto::_impl_.training_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.functions_) +
          decltype(ModelProto::_impl_.functions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.configuration_) +
          decltype(ModelProto::_impl_.configuration_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ModelProto), alignof(ModelProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ModelProto::PlacementNew_,
                                 sizeof(ModelProto),
                                 alignof(ModelProto));
  }
}
constexpr auto ModelProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<16>{
      {
          &_ModelProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModelProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<ModelProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModelProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<ModelProto>(), &ModelProto::ByteSizeLong,
              &ModelProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModelProto, _impl_._cached_size_),
          true,
      },
      "onnx.ModelProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<16> ModelProto_class_data_ =
    ModelProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModelProto::GetClassData() const {
  return ModelProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 6, 0, 2>
ModelProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModelProto, _impl_._has_bits_),
    0, // no _extensions_
    26, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4244102912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ModelProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::ModelProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 ir_version = 1;
    {::_pbi::TcParser::FastV64S1,
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.ir_version_)}},
    // optional string producer_name = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.producer_name_)}},
    // optional string producer_version = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.producer_version_)}},
    // optional string domain = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.domain_)}},
    // optional int64 model_version = 5;
    {::_pbi::TcParser::FastV64S1,
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.model_version_)}},
    // optional string doc_string = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.doc_string_)}},
    // optional .onnx.GraphProto graph = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 0, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.graph_)}},
    // repeated .onnx.OperatorSetIdProto opset_import = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.opset_import_)}},
    // repeated .onnx.FunctionProto functions = 25;
    {::_pbi::TcParser::FastMtR2,
     {458, 63, 4, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.functions_)}},
    // repeated .onnx.DeviceConfigurationProto configuration = 26;
    {::_pbi::TcParser::FastMtR2,
     {466, 63, 5, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.configuration_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .onnx.StringStringEntryProto metadata_props = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 2, PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.metadata_props_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 ir_version = 1;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.ir_version_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string producer_name = 2;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.producer_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string producer_version = 3;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.producer_version_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string domain = 4;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.domain_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int64 model_version = 5;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.model_version_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string doc_string = 6;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.doc_string_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .onnx.GraphProto graph = 7;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.graph_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.OperatorSetIdProto opset_import = 8;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.opset_import_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.StringStringEntryProto metadata_props = 14;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.metadata_props_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.TrainingInfoProto training_info = 20;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.training_info_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.FunctionProto functions = 25;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.functions_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.DeviceConfigurationProto configuration = 26;
    {PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.configuration_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::GraphProto>()},
      {::_pbi::TcParser::GetTable<::onnx::OperatorSetIdProto>()},
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
      {::_pbi::TcParser::GetTable<::onnx::TrainingInfoProto>()},
      {::_pbi::TcParser::GetTable<::onnx::FunctionProto>()},
      {::_pbi::TcParser::GetTable<::onnx::DeviceConfigurationProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ModelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.ModelProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.opset_import_.Clear();
  _impl_.metadata_props_.Clear();
  _impl_.training_info_.Clear();
  _impl_.functions_.Clear();
  _impl_.configuration_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.producer_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.producer_version_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.domain_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.doc_string_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.graph_ != nullptr);
      _impl_.graph_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000060u) != 0) {
    ::memset(&_impl_.ir_version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.model_version_) -
        reinterpret_cast<char*>(&_impl_.ir_version_)) + sizeof(_impl_.model_version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModelProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModelProto& this_ = static_cast<const ModelProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModelProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModelProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.ModelProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int64 ir_version = 1;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
            stream, this_._internal_ir_version(), target);
  }

  // optional string producer_name = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_producer_name();
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string producer_version = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_producer_version();
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string domain = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const ::std::string& _s = this_._internal_domain();
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional int64 model_version = 5;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
            stream, this_._internal_model_version(), target);
  }

  // optional string doc_string = 6;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const ::std::string& _s = this_._internal_doc_string();
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional .onnx.GraphProto graph = 7;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.graph_, this_._impl_.graph_->GetCachedSize(), target,
        stream);
  }

  // repeated .onnx.OperatorSetIdProto opset_import = 8;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_opset_import_size());
       i < n; i++) {
    const auto& repfield = this_._internal_opset_import().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 14;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_metadata_props_size());
       i < n; i++) {
    const auto& repfield = this_._internal_metadata_props().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            14, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.TrainingInfoProto training_info = 20;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_training_info_size());
       i < n; i++) {
    const auto& repfield = this_._internal_training_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            20, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.FunctionProto functions = 25;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_functions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_functions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            25, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.DeviceConfigurationProto configuration = 26;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_configuration_size());
       i < n; i++) {
    const auto& repfield = this_._internal_configuration().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            26, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.ModelProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModelProto::ByteSizeLong(const MessageLite& base) {
  const ModelProto& this_ = static_cast<const ModelProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModelProto::ByteSizeLong() const {
  const ModelProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.ModelProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .onnx.OperatorSetIdProto opset_import = 8;
    {
      total_size += 1UL * this_._internal_opset_import_size();
      for (const auto& msg : this_._internal_opset_import()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.StringStringEntryProto metadata_props = 14;
    {
      total_size += 1UL * this_._internal_metadata_props_size();
      for (const auto& msg : this_._internal_metadata_props()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.TrainingInfoProto training_info = 20;
    {
      total_size += 2UL * this_._internal_training_info_size();
      for (const auto& msg : this_._internal_training_info()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.FunctionProto functions = 25;
    {
      total_size += 2UL * this_._internal_functions_size();
      for (const auto& msg : this_._internal_functions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.DeviceConfigurationProto configuration = 26;
    {
      total_size += 2UL * this_._internal_configuration_size();
      for (const auto& msg : this_._internal_configuration()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // optional string producer_name = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_producer_name());
    }
    // optional string producer_version = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_producer_version());
    }
    // optional string domain = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_domain());
    }
    // optional string doc_string = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_doc_string());
    }
    // optional .onnx.GraphProto graph = 7;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.graph_);
    }
    // optional int64 ir_version = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_ir_version());
    }
    // optional int64 model_version = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_model_version());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void ModelProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModelProto*>(&to_msg);
  auto& from = static_cast<const ModelProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.ModelProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_opset_import()->MergeFrom(
      from._internal_opset_import());
  _this->_internal_mutable_metadata_props()->MergeFrom(
      from._internal_metadata_props());
  _this->_internal_mutable_training_info()->MergeFrom(
      from._internal_training_info());
  _this->_internal_mutable_functions()->MergeFrom(
      from._internal_functions());
  _this->_internal_mutable_configuration()->MergeFrom(
      from._internal_configuration());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_producer_name(from._internal_producer_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_producer_version(from._internal_producer_version());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_domain(from._internal_domain());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_doc_string(from._internal_doc_string());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.graph_ != nullptr);
      if (_this->_impl_.graph_ == nullptr) {
        _this->_impl_.graph_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.graph_);
      } else {
        _this->_impl_.graph_->MergeFrom(*from._impl_.graph_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.ir_version_ = from._impl_.ir_version_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.model_version_ = from._impl_.model_version_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void ModelProto::CopyFrom(const ModelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.ModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModelProto::InternalSwap(ModelProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.opset_import_.InternalSwap(&other->_impl_.opset_import_);
  _impl_.metadata_props_.InternalSwap(&other->_impl_.metadata_props_);
  _impl_.training_info_.InternalSwap(&other->_impl_.training_info_);
  _impl_.functions_.InternalSwap(&other->_impl_.functions_);
  _impl_.configuration_.InternalSwap(&other->_impl_.configuration_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.producer_name_, &other->_impl_.producer_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.producer_version_, &other->_impl_.producer_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.doc_string_, &other->_impl_.doc_string_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.model_version_)
      + sizeof(ModelProto::_impl_.model_version_)
      - PROTOBUF_FIELD_OFFSET(ModelProto, _impl_.graph_)>(
          reinterpret_cast<char*>(&_impl_.graph_),
          reinterpret_cast<char*>(&other->_impl_.graph_));
}

// ===================================================================

class DeviceConfigurationProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeviceConfigurationProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_._has_bits_);
};

DeviceConfigurationProto::DeviceConfigurationProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, DeviceConfigurationProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.DeviceConfigurationProto)
}
PROTOBUF_NDEBUG_INLINE DeviceConfigurationProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::DeviceConfigurationProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_{visibility, arena, from.device_},
        name_(arena, from.name_) {}

DeviceConfigurationProto::DeviceConfigurationProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeviceConfigurationProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, DeviceConfigurationProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceConfigurationProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.num_devices_ = from._impl_.num_devices_;

  // @@protoc_insertion_point(copy_constructor:onnx.DeviceConfigurationProto)
}
PROTOBUF_NDEBUG_INLINE DeviceConfigurationProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        device_{visibility, arena},
        name_(arena) {}

inline void DeviceConfigurationProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.num_devices_ = {};
}
DeviceConfigurationProto::~DeviceConfigurationProto() {
  // @@protoc_insertion_point(destructor:onnx.DeviceConfigurationProto)
  SharedDtor(*this);
}
inline void DeviceConfigurationProto::SharedDtor(MessageLite& self) {
  DeviceConfigurationProto& this_ = static_cast<DeviceConfigurationProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeviceConfigurationProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeviceConfigurationProto(arena);
}
constexpr auto DeviceConfigurationProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_.device_) +
          decltype(DeviceConfigurationProto::_impl_.device_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DeviceConfigurationProto), alignof(DeviceConfigurationProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeviceConfigurationProto::PlacementNew_,
                                 sizeof(DeviceConfigurationProto),
                                 alignof(DeviceConfigurationProto));
  }
}
constexpr auto DeviceConfigurationProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<30>{
      {
          &_DeviceConfigurationProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeviceConfigurationProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<DeviceConfigurationProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeviceConfigurationProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<DeviceConfigurationProto>(), &DeviceConfigurationProto::ByteSizeLong,
              &DeviceConfigurationProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_._cached_size_),
          true,
      },
      "onnx.DeviceConfigurationProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<30> DeviceConfigurationProto_class_data_ =
    DeviceConfigurationProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeviceConfigurationProto::GetClassData() const {
  return DeviceConfigurationProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
DeviceConfigurationProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeviceConfigurationProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::DeviceConfigurationProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_.name_)}},
    // optional int32 num_devices = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_.num_devices_)}},
    // repeated string device = 3;
    {::_pbi::TcParser::FastBR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int32 num_devices = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_.num_devices_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated string device = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceConfigurationProto, _impl_.device_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void DeviceConfigurationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.DeviceConfigurationProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.num_devices_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeviceConfigurationProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeviceConfigurationProto& this_ = static_cast<const DeviceConfigurationProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeviceConfigurationProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeviceConfigurationProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.DeviceConfigurationProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_name();
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 num_devices = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_num_devices(), target);
  }

  // repeated string device = 3;
  for (int i = 0, n = this_._internal_device_size(); i < n; ++i) {
    const auto& s = this_._internal_device().Get(i);
    target = stream->WriteString(3, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.DeviceConfigurationProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeviceConfigurationProto::ByteSizeLong(const MessageLite& base) {
  const DeviceConfigurationProto& this_ = static_cast<const DeviceConfigurationProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeviceConfigurationProto::ByteSizeLong() const {
  const DeviceConfigurationProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.DeviceConfigurationProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string device = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_device().size());
      for (int i = 0, n = this_._internal_device().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_device().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional int32 num_devices = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_num_devices());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void DeviceConfigurationProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceConfigurationProto*>(&to_msg);
  auto& from = static_cast<const DeviceConfigurationProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.DeviceConfigurationProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device()->MergeFrom(from._internal_device());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.num_devices_ = from._impl_.num_devices_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void DeviceConfigurationProto::CopyFrom(const DeviceConfigurationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.DeviceConfigurationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceConfigurationProto::InternalSwap(DeviceConfigurationProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.device_.InternalSwap(&other->_impl_.device_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.num_devices_, other->_impl_.num_devices_);
}

// ===================================================================

class StringStringEntryProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StringStringEntryProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StringStringEntryProto, _impl_._has_bits_);
};

StringStringEntryProto::StringStringEntryProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, StringStringEntryProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.StringStringEntryProto)
}
PROTOBUF_NDEBUG_INLINE StringStringEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::StringStringEntryProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        value_(arena, from.value_) {}

StringStringEntryProto::StringStringEntryProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StringStringEntryProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, StringStringEntryProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StringStringEntryProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:onnx.StringStringEntryProto)
}
PROTOBUF_NDEBUG_INLINE StringStringEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        key_(arena),
        value_(arena) {}

inline void StringStringEntryProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StringStringEntryProto::~StringStringEntryProto() {
  // @@protoc_insertion_point(destructor:onnx.StringStringEntryProto)
  SharedDtor(*this);
}
inline void StringStringEntryProto::SharedDtor(MessageLite& self) {
  StringStringEntryProto& this_ = static_cast<StringStringEntryProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StringStringEntryProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StringStringEntryProto(arena);
}
constexpr auto StringStringEntryProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StringStringEntryProto),
                                            alignof(StringStringEntryProto));
}
constexpr auto StringStringEntryProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<28>{
      {
          &_StringStringEntryProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StringStringEntryProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<StringStringEntryProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StringStringEntryProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<StringStringEntryProto>(), &StringStringEntryProto::ByteSizeLong,
              &StringStringEntryProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StringStringEntryProto, _impl_._cached_size_),
          true,
      },
      "onnx.StringStringEntryProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<28> StringStringEntryProto_class_data_ =
    StringStringEntryProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StringStringEntryProto::GetClassData() const {
  return StringStringEntryProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
StringStringEntryProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StringStringEntryProto, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StringStringEntryProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(StringStringEntryProto, _impl_.value_)}},
    // optional string key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StringStringEntryProto, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string key = 1;
    {PROTOBUF_FIELD_OFFSET(StringStringEntryProto, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string value = 2;
    {PROTOBUF_FIELD_OFFSET(StringStringEntryProto, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void StringStringEntryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.StringStringEntryProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StringStringEntryProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StringStringEntryProto& this_ = static_cast<const StringStringEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StringStringEntryProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StringStringEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.StringStringEntryProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string key = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_key();
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string value = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_value();
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.StringStringEntryProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StringStringEntryProto::ByteSizeLong(const MessageLite& base) {
  const StringStringEntryProto& this_ = static_cast<const StringStringEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StringStringEntryProto::ByteSizeLong() const {
  const StringStringEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.StringStringEntryProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string key = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_key());
    }
    // optional string value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_value());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void StringStringEntryProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StringStringEntryProto*>(&to_msg);
  auto& from = static_cast<const StringStringEntryProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.StringStringEntryProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_key(from._internal_key());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void StringStringEntryProto::CopyFrom(const StringStringEntryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.StringStringEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StringStringEntryProto::InternalSwap(StringStringEntryProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

// ===================================================================

class TensorAnnotation::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TensorAnnotation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TensorAnnotation, _impl_._has_bits_);
};

TensorAnnotation::TensorAnnotation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorAnnotation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TensorAnnotation)
}
PROTOBUF_NDEBUG_INLINE TensorAnnotation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TensorAnnotation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        quant_parameter_tensor_names_{visibility, arena, from.quant_parameter_tensor_names_},
        tensor_name_(arena, from.tensor_name_) {}

TensorAnnotation::TensorAnnotation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TensorAnnotation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorAnnotation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TensorAnnotation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:onnx.TensorAnnotation)
}
PROTOBUF_NDEBUG_INLINE TensorAnnotation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        quant_parameter_tensor_names_{visibility, arena},
        tensor_name_(arena) {}

inline void TensorAnnotation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TensorAnnotation::~TensorAnnotation() {
  // @@protoc_insertion_point(destructor:onnx.TensorAnnotation)
  SharedDtor(*this);
}
inline void TensorAnnotation::SharedDtor(MessageLite& self) {
  TensorAnnotation& this_ = static_cast<TensorAnnotation&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tensor_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TensorAnnotation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TensorAnnotation(arena);
}
constexpr auto TensorAnnotation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TensorAnnotation, _impl_.quant_parameter_tensor_names_) +
          decltype(TensorAnnotation::_impl_.quant_parameter_tensor_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TensorAnnotation), alignof(TensorAnnotation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TensorAnnotation::PlacementNew_,
                                 sizeof(TensorAnnotation),
                                 alignof(TensorAnnotation));
  }
}
constexpr auto TensorAnnotation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<22>{
      {
          &_TensorAnnotation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TensorAnnotation::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TensorAnnotation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TensorAnnotation::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TensorAnnotation>(), &TensorAnnotation::ByteSizeLong,
              &TensorAnnotation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TensorAnnotation, _impl_._cached_size_),
          true,
      },
      "onnx.TensorAnnotation",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<22> TensorAnnotation_class_data_ =
    TensorAnnotation::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TensorAnnotation::GetClassData() const {
  return TensorAnnotation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
TensorAnnotation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TensorAnnotation, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TensorAnnotation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TensorAnnotation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TensorAnnotation, _impl_.quant_parameter_tensor_names_)}},
    // optional string tensor_name = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TensorAnnotation, _impl_.tensor_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string tensor_name = 1;
    {PROTOBUF_FIELD_OFFSET(TensorAnnotation, _impl_.tensor_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;
    {PROTOBUF_FIELD_OFFSET(TensorAnnotation, _impl_.quant_parameter_tensor_names_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TensorAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TensorAnnotation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.quant_parameter_tensor_names_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.tensor_name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TensorAnnotation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TensorAnnotation& this_ = static_cast<const TensorAnnotation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TensorAnnotation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TensorAnnotation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorAnnotation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string tensor_name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_tensor_name();
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_quant_parameter_tensor_names_size());
       i < n; i++) {
    const auto& repfield = this_._internal_quant_parameter_tensor_names().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorAnnotation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TensorAnnotation::ByteSizeLong(const MessageLite& base) {
  const TensorAnnotation& this_ = static_cast<const TensorAnnotation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TensorAnnotation::ByteSizeLong() const {
  const TensorAnnotation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TensorAnnotation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .onnx.StringStringEntryProto quant_parameter_tensor_names = 2;
    {
      total_size += 1UL * this_._internal_quant_parameter_tensor_names_size();
      for (const auto& msg : this_._internal_quant_parameter_tensor_names()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional string tensor_name = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_tensor_name());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TensorAnnotation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TensorAnnotation*>(&to_msg);
  auto& from = static_cast<const TensorAnnotation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TensorAnnotation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_quant_parameter_tensor_names()->MergeFrom(
      from._internal_quant_parameter_tensor_names());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_tensor_name(from._internal_tensor_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TensorAnnotation::CopyFrom(const TensorAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TensorAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TensorAnnotation::InternalSwap(TensorAnnotation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.quant_parameter_tensor_names_.InternalSwap(&other->_impl_.quant_parameter_tensor_names_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tensor_name_, &other->_impl_.tensor_name_, arena);
}

// ===================================================================

class GraphProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GraphProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GraphProto, _impl_._has_bits_);
};

GraphProto::GraphProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, GraphProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.GraphProto)
}
PROTOBUF_NDEBUG_INLINE GraphProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::GraphProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        node_{visibility, arena, from.node_},
        initializer_{visibility, arena, from.initializer_},
        input_{visibility, arena, from.input_},
        output_{visibility, arena, from.output_},
        value_info_{visibility, arena, from.value_info_},
        quantization_annotation_{visibility, arena, from.quantization_annotation_},
        sparse_initializer_{visibility, arena, from.sparse_initializer_},
        metadata_props_{visibility, arena, from.metadata_props_},
        name_(arena, from.name_),
        doc_string_(arena, from.doc_string_) {}

GraphProto::GraphProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GraphProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, GraphProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:onnx.GraphProto)
}
PROTOBUF_NDEBUG_INLINE GraphProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        node_{visibility, arena},
        initializer_{visibility, arena},
        input_{visibility, arena},
        output_{visibility, arena},
        value_info_{visibility, arena},
        quantization_annotation_{visibility, arena},
        sparse_initializer_{visibility, arena},
        metadata_props_{visibility, arena},
        name_(arena),
        doc_string_(arena) {}

inline void GraphProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GraphProto::~GraphProto() {
  // @@protoc_insertion_point(destructor:onnx.GraphProto)
  SharedDtor(*this);
}
inline void GraphProto::SharedDtor(MessageLite& self) {
  GraphProto& this_ = static_cast<GraphProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.doc_string_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GraphProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GraphProto(arena);
}
constexpr auto GraphProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.node_) +
          decltype(GraphProto::_impl_.node_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.initializer_) +
          decltype(GraphProto::_impl_.initializer_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.sparse_initializer_) +
          decltype(GraphProto::_impl_.sparse_initializer_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.input_) +
          decltype(GraphProto::_impl_.input_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.output_) +
          decltype(GraphProto::_impl_.output_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.value_info_) +
          decltype(GraphProto::_impl_.value_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.quantization_annotation_) +
          decltype(GraphProto::_impl_.quantization_annotation_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.metadata_props_) +
          decltype(GraphProto::_impl_.metadata_props_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GraphProto), alignof(GraphProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphProto::PlacementNew_,
                                 sizeof(GraphProto),
                                 alignof(GraphProto));
  }
}
constexpr auto GraphProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<16>{
      {
          &_GraphProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GraphProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<GraphProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GraphProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<GraphProto>(), &GraphProto::ByteSizeLong,
              &GraphProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GraphProto, _impl_._cached_size_),
          true,
      },
      "onnx.GraphProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<16> GraphProto_class_data_ =
    GraphProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GraphProto::GetClassData() const {
  return GraphProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 8, 0, 2>
GraphProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphProto, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294902252,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GraphProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::GraphProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .onnx.StringStringEntryProto metadata_props = 16;
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 7, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.metadata_props_)}},
    // repeated .onnx.NodeProto node = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.node_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .onnx.TensorProto initializer = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.initializer_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string doc_string = 10;
    {::_pbi::TcParser::FastBS1,
     {82, 1, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.doc_string_)}},
    // repeated .onnx.ValueInfoProto input = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 2, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.input_)}},
    // repeated .onnx.ValueInfoProto output = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 3, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.output_)}},
    // repeated .onnx.ValueInfoProto value_info = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 4, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.value_info_)}},
    // repeated .onnx.TensorAnnotation quantization_annotation = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 5, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.quantization_annotation_)}},
    // repeated .onnx.SparseTensorProto sparse_initializer = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 6, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.sparse_initializer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .onnx.NodeProto node = 1;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.node_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.TensorProto initializer = 5;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.initializer_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string doc_string = 10;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.doc_string_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.ValueInfoProto input = 11;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.input_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.ValueInfoProto output = 12;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.output_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.ValueInfoProto value_info = 13;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.value_info_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.TensorAnnotation quantization_annotation = 14;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.quantization_annotation_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.SparseTensorProto sparse_initializer = 15;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.sparse_initializer_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.StringStringEntryProto metadata_props = 16;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.metadata_props_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::NodeProto>()},
      {::_pbi::TcParser::GetTable<::onnx::TensorProto>()},
      {::_pbi::TcParser::GetTable<::onnx::ValueInfoProto>()},
      {::_pbi::TcParser::GetTable<::onnx::ValueInfoProto>()},
      {::_pbi::TcParser::GetTable<::onnx::ValueInfoProto>()},
      {::_pbi::TcParser::GetTable<::onnx::TensorAnnotation>()},
      {::_pbi::TcParser::GetTable<::onnx::SparseTensorProto>()},
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GraphProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.GraphProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.Clear();
  _impl_.initializer_.Clear();
  _impl_.input_.Clear();
  _impl_.output_.Clear();
  _impl_.value_info_.Clear();
  _impl_.quantization_annotation_.Clear();
  _impl_.sparse_initializer_.Clear();
  _impl_.metadata_props_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.doc_string_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GraphProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GraphProto& this_ = static_cast<const GraphProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GraphProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GraphProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.GraphProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .onnx.NodeProto node = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_node_size());
       i < n; i++) {
    const auto& repfield = this_._internal_node().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_name();
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .onnx.TensorProto initializer = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_initializer_size());
       i < n; i++) {
    const auto& repfield = this_._internal_initializer().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional string doc_string = 10;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_doc_string();
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // repeated .onnx.ValueInfoProto input = 11;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_input_size());
       i < n; i++) {
    const auto& repfield = this_._internal_input().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.ValueInfoProto output = 12;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_output_size());
       i < n; i++) {
    const auto& repfield = this_._internal_output().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            12, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.ValueInfoProto value_info = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_value_info_size());
       i < n; i++) {
    const auto& repfield = this_._internal_value_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.TensorAnnotation quantization_annotation = 14;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_quantization_annotation_size());
       i < n; i++) {
    const auto& repfield = this_._internal_quantization_annotation().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            14, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.SparseTensorProto sparse_initializer = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_sparse_initializer_size());
       i < n; i++) {
    const auto& repfield = this_._internal_sparse_initializer().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 16;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_metadata_props_size());
       i < n; i++) {
    const auto& repfield = this_._internal_metadata_props().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            16, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.GraphProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GraphProto::ByteSizeLong(const MessageLite& base) {
  const GraphProto& this_ = static_cast<const GraphProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GraphProto::ByteSizeLong() const {
  const GraphProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.GraphProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .onnx.NodeProto node = 1;
    {
      total_size += 1UL * this_._internal_node_size();
      for (const auto& msg : this_._internal_node()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.TensorProto initializer = 5;
    {
      total_size += 1UL * this_._internal_initializer_size();
      for (const auto& msg : this_._internal_initializer()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.ValueInfoProto input = 11;
    {
      total_size += 1UL * this_._internal_input_size();
      for (const auto& msg : this_._internal_input()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.ValueInfoProto output = 12;
    {
      total_size += 1UL * this_._internal_output_size();
      for (const auto& msg : this_._internal_output()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.ValueInfoProto value_info = 13;
    {
      total_size += 1UL * this_._internal_value_info_size();
      for (const auto& msg : this_._internal_value_info()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.TensorAnnotation quantization_annotation = 14;
    {
      total_size += 1UL * this_._internal_quantization_annotation_size();
      for (const auto& msg : this_._internal_quantization_annotation()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.SparseTensorProto sparse_initializer = 15;
    {
      total_size += 1UL * this_._internal_sparse_initializer_size();
      for (const auto& msg : this_._internal_sparse_initializer()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.StringStringEntryProto metadata_props = 16;
    {
      total_size += 2UL * this_._internal_metadata_props_size();
      for (const auto& msg : this_._internal_metadata_props()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string name = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional string doc_string = 10;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_doc_string());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void GraphProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphProto*>(&to_msg);
  auto& from = static_cast<const GraphProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.GraphProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node()->MergeFrom(
      from._internal_node());
  _this->_internal_mutable_initializer()->MergeFrom(
      from._internal_initializer());
  _this->_internal_mutable_input()->MergeFrom(
      from._internal_input());
  _this->_internal_mutable_output()->MergeFrom(
      from._internal_output());
  _this->_internal_mutable_value_info()->MergeFrom(
      from._internal_value_info());
  _this->_internal_mutable_quantization_annotation()->MergeFrom(
      from._internal_quantization_annotation());
  _this->_internal_mutable_sparse_initializer()->MergeFrom(
      from._internal_sparse_initializer());
  _this->_internal_mutable_metadata_props()->MergeFrom(
      from._internal_metadata_props());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_doc_string(from._internal_doc_string());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void GraphProto::CopyFrom(const GraphProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.GraphProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphProto::InternalSwap(GraphProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.node_.InternalSwap(&other->_impl_.node_);
  _impl_.initializer_.InternalSwap(&other->_impl_.initializer_);
  _impl_.input_.InternalSwap(&other->_impl_.input_);
  _impl_.output_.InternalSwap(&other->_impl_.output_);
  _impl_.value_info_.InternalSwap(&other->_impl_.value_info_);
  _impl_.quantization_annotation_.InternalSwap(&other->_impl_.quantization_annotation_);
  _impl_.sparse_initializer_.InternalSwap(&other->_impl_.sparse_initializer_);
  _impl_.metadata_props_.InternalSwap(&other->_impl_.metadata_props_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.doc_string_, &other->_impl_.doc_string_, arena);
}

// ===================================================================

class TensorProto_Segment::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TensorProto_Segment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TensorProto_Segment, _impl_._has_bits_);
};

TensorProto_Segment::TensorProto_Segment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorProto_Segment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TensorProto.Segment)
}
TensorProto_Segment::TensorProto_Segment(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TensorProto_Segment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorProto_Segment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TensorProto_Segment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TensorProto_Segment::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, begin_),
           0,
           offsetof(Impl_, end_) -
               offsetof(Impl_, begin_) +
               sizeof(Impl_::end_));
}
TensorProto_Segment::~TensorProto_Segment() {
  // @@protoc_insertion_point(destructor:onnx.TensorProto.Segment)
  SharedDtor(*this);
}
inline void TensorProto_Segment::SharedDtor(MessageLite& self) {
  TensorProto_Segment& this_ = static_cast<TensorProto_Segment&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TensorProto_Segment::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TensorProto_Segment(arena);
}
constexpr auto TensorProto_Segment::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TensorProto_Segment),
                                            alignof(TensorProto_Segment));
}
constexpr auto TensorProto_Segment::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<25>{
      {
          &_TensorProto_Segment_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TensorProto_Segment::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TensorProto_Segment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TensorProto_Segment::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TensorProto_Segment>(), &TensorProto_Segment::ByteSizeLong,
              &TensorProto_Segment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TensorProto_Segment, _impl_._cached_size_),
          true,
      },
      "onnx.TensorProto.Segment",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<25> TensorProto_Segment_class_data_ =
    TensorProto_Segment::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TensorProto_Segment::GetClassData() const {
  return TensorProto_Segment_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
TensorProto_Segment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TensorProto_Segment, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TensorProto_Segment_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TensorProto_Segment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 end = 2;
    {::_pbi::TcParser::FastV64S1,
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TensorProto_Segment, _impl_.end_)}},
    // optional int64 begin = 1;
    {::_pbi::TcParser::FastV64S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TensorProto_Segment, _impl_.begin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 begin = 1;
    {PROTOBUF_FIELD_OFFSET(TensorProto_Segment, _impl_.begin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 end = 2;
    {PROTOBUF_FIELD_OFFSET(TensorProto_Segment, _impl_.end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TensorProto_Segment::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TensorProto.Segment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.begin_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_) -
        reinterpret_cast<char*>(&_impl_.begin_)) + sizeof(_impl_.end_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TensorProto_Segment::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TensorProto_Segment& this_ = static_cast<const TensorProto_Segment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TensorProto_Segment::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TensorProto_Segment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorProto.Segment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int64 begin = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
            stream, this_._internal_begin(), target);
  }

  // optional int64 end = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
            stream, this_._internal_end(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorProto.Segment)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TensorProto_Segment::ByteSizeLong(const MessageLite& base) {
  const TensorProto_Segment& this_ = static_cast<const TensorProto_Segment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TensorProto_Segment::ByteSizeLong() const {
  const TensorProto_Segment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TensorProto.Segment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional int64 begin = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_begin());
    }
    // optional int64 end = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_end());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TensorProto_Segment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TensorProto_Segment*>(&to_msg);
  auto& from = static_cast<const TensorProto_Segment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TensorProto.Segment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.begin_ = from._impl_.begin_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.end_ = from._impl_.end_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TensorProto_Segment::CopyFrom(const TensorProto_Segment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TensorProto.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TensorProto_Segment::InternalSwap(TensorProto_Segment* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TensorProto_Segment, _impl_.end_)
      + sizeof(TensorProto_Segment::_impl_.end_)
      - PROTOBUF_FIELD_OFFSET(TensorProto_Segment, _impl_.begin_)>(
          reinterpret_cast<char*>(&_impl_.begin_),
          reinterpret_cast<char*>(&other->_impl_.begin_));
}

// ===================================================================

class TensorProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TensorProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TensorProto, _impl_._has_bits_);
};

TensorProto::TensorProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TensorProto)
}
PROTOBUF_NDEBUG_INLINE TensorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TensorProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dims_{visibility, arena, from.dims_},
        float_data_{visibility, arena, from.float_data_},
        int32_data_{visibility, arena, from.int32_data_},
        _int32_data_cached_byte_size_{0},
        string_data_{visibility, arena, from.string_data_},
        int64_data_{visibility, arena, from.int64_data_},
        _int64_data_cached_byte_size_{0},
        double_data_{visibility, arena, from.double_data_},
        uint64_data_{visibility, arena, from.uint64_data_},
        _uint64_data_cached_byte_size_{0},
        external_data_{visibility, arena, from.external_data_},
        metadata_props_{visibility, arena, from.metadata_props_},
        name_(arena, from.name_),
        raw_data_(arena, from.raw_data_),
        doc_string_(arena, from.doc_string_) {}

TensorProto::TensorProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TensorProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TensorProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.segment_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.segment_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, data_type_),
           offsetof(Impl_, data_location_) -
               offsetof(Impl_, data_type_) +
               sizeof(Impl_::data_location_));

  // @@protoc_insertion_point(copy_constructor:onnx.TensorProto)
}
PROTOBUF_NDEBUG_INLINE TensorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        dims_{visibility, arena},
        float_data_{visibility, arena},
        int32_data_{visibility, arena},
        _int32_data_cached_byte_size_{0},
        string_data_{visibility, arena},
        int64_data_{visibility, arena},
        _int64_data_cached_byte_size_{0},
        double_data_{visibility, arena},
        uint64_data_{visibility, arena},
        _uint64_data_cached_byte_size_{0},
        external_data_{visibility, arena},
        metadata_props_{visibility, arena},
        name_(arena),
        raw_data_(arena),
        doc_string_(arena) {}

inline void TensorProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, segment_),
           0,
           offsetof(Impl_, data_location_) -
               offsetof(Impl_, segment_) +
               sizeof(Impl_::data_location_));
}
TensorProto::~TensorProto() {
  // @@protoc_insertion_point(destructor:onnx.TensorProto)
  SharedDtor(*this);
}
inline void TensorProto::SharedDtor(MessageLite& self) {
  TensorProto& this_ = static_cast<TensorProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.raw_data_.Destroy();
  this_._impl_.doc_string_.Destroy();
  delete this_._impl_.segment_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TensorProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TensorProto(arena);
}
constexpr auto TensorProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.dims_) +
          decltype(TensorProto::_impl_.dims_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.float_data_) +
          decltype(TensorProto::_impl_.float_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int32_data_) +
          decltype(TensorProto::_impl_.int32_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.string_data_) +
          decltype(TensorProto::_impl_.string_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int64_data_) +
          decltype(TensorProto::_impl_.int64_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.external_data_) +
          decltype(TensorProto::_impl_.external_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.double_data_) +
          decltype(TensorProto::_impl_.double_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.uint64_data_) +
          decltype(TensorProto::_impl_.uint64_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.metadata_props_) +
          decltype(TensorProto::_impl_.metadata_props_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TensorProto), alignof(TensorProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TensorProto::PlacementNew_,
                                 sizeof(TensorProto),
                                 alignof(TensorProto));
  }
}
constexpr auto TensorProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<17>{
      {
          &_TensorProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TensorProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TensorProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TensorProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TensorProto>(), &TensorProto::ByteSizeLong,
              &TensorProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TensorProto, _impl_._cached_size_),
          true,
      },
      "onnx.TensorProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<17> TensorProto_class_data_ =
    TensorProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TensorProto::GetClassData() const {
  return TensorProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 4, 0, 2>
TensorProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TensorProto, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294918144,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TensorProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TensorProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .onnx.StringStringEntryProto metadata_props = 16;
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 2, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.metadata_props_)}},
    // repeated int64 dims = 1;
    {::_pbi::TcParser::FastV64R1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.dims_)}},
    // optional int32 data_type = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.data_type_)}},
    // optional .onnx.TensorProto.Segment segment = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.segment_)}},
    // repeated float float_data = 4 [packed = true];
    {::_pbi::TcParser::FastF32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.float_data_)}},
    // repeated int32 int32_data = 5 [packed = true];
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int32_data_)}},
    // repeated bytes string_data = 6;
    {::_pbi::TcParser::FastBR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.string_data_)}},
    // repeated int64 int64_data = 7 [packed = true];
    {::_pbi::TcParser::FastV64P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int64_data_)}},
    // optional string name = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.name_)}},
    // optional bytes raw_data = 9;
    {::_pbi::TcParser::FastBS1,
     {74, 1, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.raw_data_)}},
    // repeated double double_data = 10 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.double_data_)}},
    // repeated uint64 uint64_data = 11 [packed = true];
    {::_pbi::TcParser::FastV64P1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.uint64_data_)}},
    // optional string doc_string = 12;
    {::_pbi::TcParser::FastBS1,
     {98, 2, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.doc_string_)}},
    // repeated .onnx.StringStringEntryProto external_data = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 1, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.external_data_)}},
    // optional .onnx.TensorProto.DataLocation data_location = 14;
    {::_pbi::TcParser::FastEr0S1,
     {112, 5, 1, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.data_location_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 dims = 1;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.dims_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // optional int32 data_type = 2;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.data_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .onnx.TensorProto.Segment segment = 3;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.segment_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated float float_data = 4 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.float_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated int32 int32_data = 5 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int32_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated bytes string_data = 6;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.string_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated int64 int64_data = 7 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int64_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // optional string name = 8;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes raw_data = 9;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.raw_data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated double double_data = 10 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.double_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated uint64 uint64_data = 11 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.uint64_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // optional string doc_string = 12;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.doc_string_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.StringStringEntryProto external_data = 13;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.external_data_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .onnx.TensorProto.DataLocation data_location = 14;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.data_location_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .onnx.StringStringEntryProto metadata_props = 16;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.metadata_props_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TensorProto_Segment>()},
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
      {0, 1},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TensorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TensorProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dims_.Clear();
  _impl_.float_data_.Clear();
  _impl_.int32_data_.Clear();
  _impl_.string_data_.Clear();
  _impl_.int64_data_.Clear();
  _impl_.double_data_.Clear();
  _impl_.uint64_data_.Clear();
  _impl_.external_data_.Clear();
  _impl_.metadata_props_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.raw_data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.doc_string_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.segment_ != nullptr);
      _impl_.segment_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000030u) != 0) {
    ::memset(&_impl_.data_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.data_location_) -
        reinterpret_cast<char*>(&_impl_.data_type_)) + sizeof(_impl_.data_location_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TensorProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TensorProto& this_ = static_cast<const TensorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TensorProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TensorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int64 dims = 1;
  for (int i = 0, n = this_._internal_dims_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        1, this_._internal_dims().Get(i), target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 data_type = 2;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_data_type(), target);
  }

  // optional .onnx.TensorProto.Segment segment = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.segment_, this_._impl_.segment_->GetCachedSize(), target,
        stream);
  }

  // repeated float float_data = 4 [packed = true];
  if (this_._internal_float_data_size() > 0) {
    target = stream->WriteFixedPacked(4, this_._internal_float_data(), target);
  }

  // repeated int32 int32_data = 5 [packed = true];
  {
    int byte_size = this_._impl_._int32_data_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, this_._internal_int32_data(), byte_size, target);
    }
  }

  // repeated bytes string_data = 6;
  for (int i = 0, n = this_._internal_string_data_size(); i < n; ++i) {
    const auto& s = this_._internal_string_data().Get(i);
    target = stream->WriteBytes(6, s, target);
  }

  // repeated int64 int64_data = 7 [packed = true];
  {
    int byte_size = this_._impl_._int64_data_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          7, this_._internal_int64_data(), byte_size, target);
    }
  }

  // optional string name = 8;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_name();
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional bytes raw_data = 9;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_raw_data();
    target = stream->WriteBytesMaybeAliased(9, _s, target);
  }

  // repeated double double_data = 10 [packed = true];
  if (this_._internal_double_data_size() > 0) {
    target = stream->WriteFixedPacked(10, this_._internal_double_data(), target);
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  {
    int byte_size = this_._impl_._uint64_data_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          11, this_._internal_uint64_data(), byte_size, target);
    }
  }

  // optional string doc_string = 12;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const ::std::string& _s = this_._internal_doc_string();
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // repeated .onnx.StringStringEntryProto external_data = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_external_data_size());
       i < n; i++) {
    const auto& repfield = this_._internal_external_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .onnx.TensorProto.DataLocation data_location = 14;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        14, this_._internal_data_location(), target);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 16;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_metadata_props_size());
       i < n; i++) {
    const auto& repfield = this_._internal_metadata_props().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            16, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TensorProto::ByteSizeLong(const MessageLite& base) {
  const TensorProto& this_ = static_cast<const TensorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TensorProto::ByteSizeLong() const {
  const TensorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TensorProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int64 dims = 1;
    {
      ::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
          this_._internal_dims());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_dims_size());
      total_size += tag_size + data_size;
    }
    // repeated float float_data = 4 [packed = true];
    {
      ::size_t data_size = ::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_float_data_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // repeated int32 int32_data = 5 [packed = true];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_int32_data(), 1,
              this_._impl_._int32_data_cached_byte_size_);
    }
    // repeated bytes string_data = 6;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_string_data().size());
      for (int i = 0, n = this_._internal_string_data().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
            this_._internal_string_data().Get(i));
      }
    }
    // repeated int64 int64_data = 7 [packed = true];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
              this_._internal_int64_data(), 1,
              this_._impl_._int64_data_cached_byte_size_);
    }
    // repeated double double_data = 10 [packed = true];
    {
      ::size_t data_size = ::size_t{8} *
          ::_pbi::FromIntSize(this_._internal_double_data_size());
      ::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
    // repeated uint64 uint64_data = 11 [packed = true];
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
              this_._internal_uint64_data(), 1,
              this_._impl_._uint64_data_cached_byte_size_);
    }
    // repeated .onnx.StringStringEntryProto external_data = 13;
    {
      total_size += 1UL * this_._internal_external_data_size();
      for (const auto& msg : this_._internal_external_data()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.StringStringEntryProto metadata_props = 16;
    {
      total_size += 2UL * this_._internal_metadata_props_size();
      for (const auto& msg : this_._internal_metadata_props()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // optional string name = 8;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional bytes raw_data = 9;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_raw_data());
    }
    // optional string doc_string = 12;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_doc_string());
    }
    // optional .onnx.TensorProto.Segment segment = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.segment_);
    }
    // optional int32 data_type = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_data_type());
    }
    // optional .onnx.TensorProto.DataLocation data_location = 14;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_data_location());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TensorProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TensorProto*>(&to_msg);
  auto& from = static_cast<const TensorProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TensorProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dims()->MergeFrom(from._internal_dims());
  _this->_internal_mutable_float_data()->MergeFrom(from._internal_float_data());
  _this->_internal_mutable_int32_data()->MergeFrom(from._internal_int32_data());
  _this->_internal_mutable_string_data()->MergeFrom(from._internal_string_data());
  _this->_internal_mutable_int64_data()->MergeFrom(from._internal_int64_data());
  _this->_internal_mutable_double_data()->MergeFrom(from._internal_double_data());
  _this->_internal_mutable_uint64_data()->MergeFrom(from._internal_uint64_data());
  _this->_internal_mutable_external_data()->MergeFrom(
      from._internal_external_data());
  _this->_internal_mutable_metadata_props()->MergeFrom(
      from._internal_metadata_props());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_raw_data(from._internal_raw_data());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_doc_string(from._internal_doc_string());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.segment_ != nullptr);
      if (_this->_impl_.segment_ == nullptr) {
        _this->_impl_.segment_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.segment_);
      } else {
        _this->_impl_.segment_->MergeFrom(*from._impl_.segment_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.data_type_ = from._impl_.data_type_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.data_location_ = from._impl_.data_location_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TensorProto::CopyFrom(const TensorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TensorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TensorProto::InternalSwap(TensorProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dims_.InternalSwap(&other->_impl_.dims_);
  _impl_.float_data_.InternalSwap(&other->_impl_.float_data_);
  _impl_.int32_data_.InternalSwap(&other->_impl_.int32_data_);
  _impl_.string_data_.InternalSwap(&other->_impl_.string_data_);
  _impl_.int64_data_.InternalSwap(&other->_impl_.int64_data_);
  _impl_.double_data_.InternalSwap(&other->_impl_.double_data_);
  _impl_.uint64_data_.InternalSwap(&other->_impl_.uint64_data_);
  _impl_.external_data_.InternalSwap(&other->_impl_.external_data_);
  _impl_.metadata_props_.InternalSwap(&other->_impl_.metadata_props_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.raw_data_, &other->_impl_.raw_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.doc_string_, &other->_impl_.doc_string_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.data_location_)
      + sizeof(TensorProto::_impl_.data_location_)
      - PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.segment_)>(
          reinterpret_cast<char*>(&_impl_.segment_),
          reinterpret_cast<char*>(&other->_impl_.segment_));
}

// ===================================================================

class SparseTensorProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SparseTensorProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_._has_bits_);
};

SparseTensorProto::SparseTensorProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, SparseTensorProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.SparseTensorProto)
}
PROTOBUF_NDEBUG_INLINE SparseTensorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::SparseTensorProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dims_{visibility, arena, from.dims_} {}

SparseTensorProto::SparseTensorProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SparseTensorProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, SparseTensorProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SparseTensorProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.values_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.values_)
                : nullptr;
  _impl_.indices_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.indices_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:onnx.SparseTensorProto)
}
PROTOBUF_NDEBUG_INLINE SparseTensorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        dims_{visibility, arena} {}

inline void SparseTensorProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, values_),
           0,
           offsetof(Impl_, indices_) -
               offsetof(Impl_, values_) +
               sizeof(Impl_::indices_));
}
SparseTensorProto::~SparseTensorProto() {
  // @@protoc_insertion_point(destructor:onnx.SparseTensorProto)
  SharedDtor(*this);
}
inline void SparseTensorProto::SharedDtor(MessageLite& self) {
  SparseTensorProto& this_ = static_cast<SparseTensorProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.values_;
  delete this_._impl_.indices_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SparseTensorProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SparseTensorProto(arena);
}
constexpr auto SparseTensorProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_.dims_) +
          decltype(SparseTensorProto::_impl_.dims_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SparseTensorProto), alignof(SparseTensorProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SparseTensorProto::PlacementNew_,
                                 sizeof(SparseTensorProto),
                                 alignof(SparseTensorProto));
  }
}
constexpr auto SparseTensorProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<23>{
      {
          &_SparseTensorProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SparseTensorProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<SparseTensorProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SparseTensorProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<SparseTensorProto>(), &SparseTensorProto::ByteSizeLong,
              &SparseTensorProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_._cached_size_),
          true,
      },
      "onnx.SparseTensorProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<23> SparseTensorProto_class_data_ =
    SparseTensorProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SparseTensorProto::GetClassData() const {
  return SparseTensorProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
SparseTensorProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SparseTensorProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::SparseTensorProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .onnx.TensorProto values = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_.values_)}},
    // optional .onnx.TensorProto indices = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_.indices_)}},
    // repeated int64 dims = 3;
    {::_pbi::TcParser::FastV64R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_.dims_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .onnx.TensorProto values = 1;
    {PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_.values_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .onnx.TensorProto indices = 2;
    {PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_.indices_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int64 dims = 3;
    {PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_.dims_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TensorProto>()},
      {::_pbi::TcParser::GetTable<::onnx::TensorProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SparseTensorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.SparseTensorProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dims_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.values_ != nullptr);
      _impl_.values_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.indices_ != nullptr);
      _impl_.indices_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SparseTensorProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SparseTensorProto& this_ = static_cast<const SparseTensorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SparseTensorProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SparseTensorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.SparseTensorProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .onnx.TensorProto values = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.values_, this_._impl_.values_->GetCachedSize(), target,
        stream);
  }

  // optional .onnx.TensorProto indices = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.indices_, this_._impl_.indices_->GetCachedSize(), target,
        stream);
  }

  // repeated int64 dims = 3;
  for (int i = 0, n = this_._internal_dims_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        3, this_._internal_dims().Get(i), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.SparseTensorProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SparseTensorProto::ByteSizeLong(const MessageLite& base) {
  const SparseTensorProto& this_ = static_cast<const SparseTensorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SparseTensorProto::ByteSizeLong() const {
  const SparseTensorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.SparseTensorProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int64 dims = 3;
    {
      ::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
          this_._internal_dims());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_dims_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .onnx.TensorProto values = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_);
    }
    // optional .onnx.TensorProto indices = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.indices_);
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void SparseTensorProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SparseTensorProto*>(&to_msg);
  auto& from = static_cast<const SparseTensorProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.SparseTensorProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dims()->MergeFrom(from._internal_dims());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.values_ != nullptr);
      if (_this->_impl_.values_ == nullptr) {
        _this->_impl_.values_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.values_);
      } else {
        _this->_impl_.values_->MergeFrom(*from._impl_.values_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.indices_ != nullptr);
      if (_this->_impl_.indices_ == nullptr) {
        _this->_impl_.indices_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.indices_);
      } else {
        _this->_impl_.indices_->MergeFrom(*from._impl_.indices_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void SparseTensorProto::CopyFrom(const SparseTensorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.SparseTensorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SparseTensorProto::InternalSwap(SparseTensorProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dims_.InternalSwap(&other->_impl_.dims_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_.indices_)
      + sizeof(SparseTensorProto::_impl_.indices_)
      - PROTOBUF_FIELD_OFFSET(SparseTensorProto, _impl_.values_)>(
          reinterpret_cast<char*>(&_impl_.values_),
          reinterpret_cast<char*>(&other->_impl_.values_));
}

// ===================================================================

class TensorShapeProto_Dimension::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TensorShapeProto_Dimension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TensorShapeProto_Dimension, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::onnx::TensorShapeProto_Dimension, _impl_._oneof_case_);
};

TensorShapeProto_Dimension::TensorShapeProto_Dimension(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorShapeProto_Dimension_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TensorShapeProto.Dimension)
}
PROTOBUF_NDEBUG_INLINE TensorShapeProto_Dimension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TensorShapeProto_Dimension& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        denotation_(arena, from.denotation_),
        value_{},
        _oneof_case_{from._oneof_case_[0]} {}

TensorShapeProto_Dimension::TensorShapeProto_Dimension(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TensorShapeProto_Dimension& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorShapeProto_Dimension_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TensorShapeProto_Dimension* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kDimValue:
        _impl_.value_.dim_value_ = from._impl_.value_.dim_value_;
        break;
      case kDimParam:
        new (&_impl_.value_.dim_param_) decltype(_impl_.value_.dim_param_){arena, from._impl_.value_.dim_param_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:onnx.TensorShapeProto.Dimension)
}
PROTOBUF_NDEBUG_INLINE TensorShapeProto_Dimension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        denotation_(arena),
        value_{},
        _oneof_case_{} {}

inline void TensorShapeProto_Dimension::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TensorShapeProto_Dimension::~TensorShapeProto_Dimension() {
  // @@protoc_insertion_point(destructor:onnx.TensorShapeProto.Dimension)
  SharedDtor(*this);
}
inline void TensorShapeProto_Dimension::SharedDtor(MessageLite& self) {
  TensorShapeProto_Dimension& this_ = static_cast<TensorShapeProto_Dimension&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.denotation_.Destroy();
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void TensorShapeProto_Dimension::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:onnx.TensorShapeProto.Dimension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kDimValue: {
      // No need to clear
      break;
    }
    case kDimParam: {
      _impl_.value_.dim_param_.Destroy();
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* PROTOBUF_NONNULL TensorShapeProto_Dimension::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TensorShapeProto_Dimension(arena);
}
constexpr auto TensorShapeProto_Dimension::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TensorShapeProto_Dimension),
                                            alignof(TensorShapeProto_Dimension));
}
constexpr auto TensorShapeProto_Dimension::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<32>{
      {
          &_TensorShapeProto_Dimension_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TensorShapeProto_Dimension::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TensorShapeProto_Dimension>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TensorShapeProto_Dimension::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TensorShapeProto_Dimension>(), &TensorShapeProto_Dimension::ByteSizeLong,
              &TensorShapeProto_Dimension::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TensorShapeProto_Dimension, _impl_._cached_size_),
          true,
      },
      "onnx.TensorShapeProto.Dimension",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<32> TensorShapeProto_Dimension_class_data_ =
    TensorShapeProto_Dimension::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TensorShapeProto_Dimension::GetClassData() const {
  return TensorShapeProto_Dimension_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 0, 2>
TensorShapeProto_Dimension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TensorShapeProto_Dimension, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TensorShapeProto_Dimension_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TensorShapeProto_Dimension>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string denotation = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TensorShapeProto_Dimension, _impl_.denotation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 dim_value = 1;
    {PROTOBUF_FIELD_OFFSET(TensorShapeProto_Dimension, _impl_.value_.dim_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // string dim_param = 2;
    {PROTOBUF_FIELD_OFFSET(TensorShapeProto_Dimension, _impl_.value_.dim_param_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string denotation = 3;
    {PROTOBUF_FIELD_OFFSET(TensorShapeProto_Dimension, _impl_.denotation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TensorShapeProto_Dimension::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TensorShapeProto.Dimension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.denotation_.ClearNonDefaultToEmpty();
  }
  clear_value();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TensorShapeProto_Dimension::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TensorShapeProto_Dimension& this_ = static_cast<const TensorShapeProto_Dimension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TensorShapeProto_Dimension::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TensorShapeProto_Dimension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorShapeProto.Dimension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.value_case()) {
    case kDimValue: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_dim_value(), target);
      break;
    }
    case kDimParam: {
      const ::std::string& _s = this_._internal_dim_param();
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    default:
      break;
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string denotation = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_denotation();
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorShapeProto.Dimension)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TensorShapeProto_Dimension::ByteSizeLong(const MessageLite& base) {
  const TensorShapeProto_Dimension& this_ = static_cast<const TensorShapeProto_Dimension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TensorShapeProto_Dimension::ByteSizeLong() const {
  const TensorShapeProto_Dimension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TensorShapeProto.Dimension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional string denotation = 3;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_denotation());
    }
  }
  switch (this_.value_case()) {
    // int64 dim_value = 1;
    case kDimValue: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_dim_value());
      break;
    }
    // string dim_param = 2;
    case kDimParam: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_dim_param());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TensorShapeProto_Dimension::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TensorShapeProto_Dimension*>(&to_msg);
  auto& from = static_cast<const TensorShapeProto_Dimension&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TensorShapeProto.Dimension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_denotation(from._internal_denotation());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDimValue: {
        _this->_impl_.value_.dim_value_ = from._impl_.value_.dim_value_;
        break;
      }
      case kDimParam: {
        if (oneof_needs_init) {
          _this->_impl_.value_.dim_param_.InitDefault();
        }
        _this->_impl_.value_.dim_param_.Set(from._internal_dim_param(), arena);
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TensorShapeProto_Dimension::CopyFrom(const TensorShapeProto_Dimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TensorShapeProto.Dimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TensorShapeProto_Dimension::InternalSwap(TensorShapeProto_Dimension* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.denotation_, &other->_impl_.denotation_, arena);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// ===================================================================

class TensorShapeProto::_Internal {
 public:
};

TensorShapeProto::TensorShapeProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorShapeProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TensorShapeProto)
}
PROTOBUF_NDEBUG_INLINE TensorShapeProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TensorShapeProto& from_msg)
      : dim_{visibility, arena, from.dim_},
        _cached_size_{0} {}

TensorShapeProto::TensorShapeProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TensorShapeProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TensorShapeProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TensorShapeProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:onnx.TensorShapeProto)
}
PROTOBUF_NDEBUG_INLINE TensorShapeProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : dim_{visibility, arena},
        _cached_size_{0} {}

inline void TensorShapeProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TensorShapeProto::~TensorShapeProto() {
  // @@protoc_insertion_point(destructor:onnx.TensorShapeProto)
  SharedDtor(*this);
}
inline void TensorShapeProto::SharedDtor(MessageLite& self) {
  TensorShapeProto& this_ = static_cast<TensorShapeProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TensorShapeProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TensorShapeProto(arena);
}
constexpr auto TensorShapeProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TensorShapeProto, _impl_.dim_) +
          decltype(TensorShapeProto::_impl_.dim_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TensorShapeProto), alignof(TensorShapeProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TensorShapeProto::PlacementNew_,
                                 sizeof(TensorShapeProto),
                                 alignof(TensorShapeProto));
  }
}
constexpr auto TensorShapeProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<22>{
      {
          &_TensorShapeProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TensorShapeProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TensorShapeProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TensorShapeProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TensorShapeProto>(), &TensorShapeProto::ByteSizeLong,
              &TensorShapeProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TensorShapeProto, _impl_._cached_size_),
          true,
      },
      "onnx.TensorShapeProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<22> TensorShapeProto_class_data_ =
    TensorShapeProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TensorShapeProto::GetClassData() const {
  return TensorShapeProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
TensorShapeProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TensorShapeProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TensorShapeProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .onnx.TensorShapeProto.Dimension dim = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TensorShapeProto, _impl_.dim_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .onnx.TensorShapeProto.Dimension dim = 1;
    {PROTOBUF_FIELD_OFFSET(TensorShapeProto, _impl_.dim_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TensorShapeProto_Dimension>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TensorShapeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TensorShapeProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dim_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TensorShapeProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TensorShapeProto& this_ = static_cast<const TensorShapeProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TensorShapeProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TensorShapeProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorShapeProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .onnx.TensorShapeProto.Dimension dim = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_dim_size());
       i < n; i++) {
    const auto& repfield = this_._internal_dim().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorShapeProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TensorShapeProto::ByteSizeLong(const MessageLite& base) {
  const TensorShapeProto& this_ = static_cast<const TensorShapeProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TensorShapeProto::ByteSizeLong() const {
  const TensorShapeProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TensorShapeProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .onnx.TensorShapeProto.Dimension dim = 1;
    {
      total_size += 1UL * this_._internal_dim_size();
      for (const auto& msg : this_._internal_dim()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TensorShapeProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TensorShapeProto*>(&to_msg);
  auto& from = static_cast<const TensorShapeProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TensorShapeProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dim()->MergeFrom(
      from._internal_dim());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TensorShapeProto::CopyFrom(const TensorShapeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TensorShapeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TensorShapeProto::InternalSwap(TensorShapeProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dim_.InternalSwap(&other->_impl_.dim_);
}

// ===================================================================

class TypeProto_Tensor::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TypeProto_Tensor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TypeProto_Tensor, _impl_._has_bits_);
};

TypeProto_Tensor::TypeProto_Tensor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_Tensor_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TypeProto.Tensor)
}
PROTOBUF_NDEBUG_INLINE TypeProto_Tensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TypeProto_Tensor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TypeProto_Tensor::TypeProto_Tensor(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TypeProto_Tensor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_Tensor_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TypeProto_Tensor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shape_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.shape_)
                : nullptr;
  _impl_.elem_type_ = from._impl_.elem_type_;

  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto.Tensor)
}
PROTOBUF_NDEBUG_INLINE TypeProto_Tensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TypeProto_Tensor::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shape_),
           0,
           offsetof(Impl_, elem_type_) -
               offsetof(Impl_, shape_) +
               sizeof(Impl_::elem_type_));
}
TypeProto_Tensor::~TypeProto_Tensor() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto.Tensor)
  SharedDtor(*this);
}
inline void TypeProto_Tensor::SharedDtor(MessageLite& self) {
  TypeProto_Tensor& this_ = static_cast<TypeProto_Tensor&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.shape_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TypeProto_Tensor::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TypeProto_Tensor(arena);
}
constexpr auto TypeProto_Tensor::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TypeProto_Tensor),
                                            alignof(TypeProto_Tensor));
}
constexpr auto TypeProto_Tensor::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<22>{
      {
          &_TypeProto_Tensor_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TypeProto_Tensor::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TypeProto_Tensor>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TypeProto_Tensor::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TypeProto_Tensor>(), &TypeProto_Tensor::ByteSizeLong,
              &TypeProto_Tensor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TypeProto_Tensor, _impl_._cached_size_),
          true,
      },
      "onnx.TypeProto.Tensor",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<22> TypeProto_Tensor_class_data_ =
    TypeProto_Tensor::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TypeProto_Tensor::GetClassData() const {
  return TypeProto_Tensor_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
TypeProto_Tensor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TypeProto_Tensor, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TypeProto_Tensor_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TypeProto_Tensor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .onnx.TensorShapeProto shape = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TypeProto_Tensor, _impl_.shape_)}},
    // optional int32 elem_type = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TypeProto_Tensor, _impl_.elem_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 elem_type = 1;
    {PROTOBUF_FIELD_OFFSET(TypeProto_Tensor, _impl_.elem_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .onnx.TensorShapeProto shape = 2;
    {PROTOBUF_FIELD_OFFSET(TypeProto_Tensor, _impl_.shape_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TensorShapeProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TypeProto_Tensor::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TypeProto.Tensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.shape_ != nullptr);
    _impl_.shape_->Clear();
  }
  _impl_.elem_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TypeProto_Tensor::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TypeProto_Tensor& this_ = static_cast<const TypeProto_Tensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TypeProto_Tensor::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TypeProto_Tensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto.Tensor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 elem_type = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_elem_type(), target);
  }

  // optional .onnx.TensorShapeProto shape = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.shape_, this_._impl_.shape_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto.Tensor)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TypeProto_Tensor::ByteSizeLong(const MessageLite& base) {
  const TypeProto_Tensor& this_ = static_cast<const TypeProto_Tensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TypeProto_Tensor::ByteSizeLong() const {
  const TypeProto_Tensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TypeProto.Tensor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .onnx.TensorShapeProto shape = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_);
    }
    // optional int32 elem_type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_elem_type());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TypeProto_Tensor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TypeProto_Tensor*>(&to_msg);
  auto& from = static_cast<const TypeProto_Tensor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TypeProto.Tensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.shape_ != nullptr);
      if (_this->_impl_.shape_ == nullptr) {
        _this->_impl_.shape_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.shape_);
      } else {
        _this->_impl_.shape_->MergeFrom(*from._impl_.shape_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.elem_type_ = from._impl_.elem_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TypeProto_Tensor::CopyFrom(const TypeProto_Tensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TypeProto.Tensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TypeProto_Tensor::InternalSwap(TypeProto_Tensor* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TypeProto_Tensor, _impl_.elem_type_)
      + sizeof(TypeProto_Tensor::_impl_.elem_type_)
      - PROTOBUF_FIELD_OFFSET(TypeProto_Tensor, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
}

// ===================================================================

class TypeProto_Sequence::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TypeProto_Sequence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TypeProto_Sequence, _impl_._has_bits_);
};

TypeProto_Sequence::TypeProto_Sequence(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_Sequence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TypeProto.Sequence)
}
PROTOBUF_NDEBUG_INLINE TypeProto_Sequence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TypeProto_Sequence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TypeProto_Sequence::TypeProto_Sequence(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TypeProto_Sequence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_Sequence_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TypeProto_Sequence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.elem_type_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.elem_type_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto.Sequence)
}
PROTOBUF_NDEBUG_INLINE TypeProto_Sequence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TypeProto_Sequence::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.elem_type_ = {};
}
TypeProto_Sequence::~TypeProto_Sequence() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto.Sequence)
  SharedDtor(*this);
}
inline void TypeProto_Sequence::SharedDtor(MessageLite& self) {
  TypeProto_Sequence& this_ = static_cast<TypeProto_Sequence&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.elem_type_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TypeProto_Sequence::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TypeProto_Sequence(arena);
}
constexpr auto TypeProto_Sequence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TypeProto_Sequence),
                                            alignof(TypeProto_Sequence));
}
constexpr auto TypeProto_Sequence::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<24>{
      {
          &_TypeProto_Sequence_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TypeProto_Sequence::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TypeProto_Sequence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TypeProto_Sequence::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TypeProto_Sequence>(), &TypeProto_Sequence::ByteSizeLong,
              &TypeProto_Sequence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TypeProto_Sequence, _impl_._cached_size_),
          true,
      },
      "onnx.TypeProto.Sequence",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<24> TypeProto_Sequence_class_data_ =
    TypeProto_Sequence::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TypeProto_Sequence::GetClassData() const {
  return TypeProto_Sequence_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
TypeProto_Sequence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TypeProto_Sequence, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TypeProto_Sequence_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TypeProto_Sequence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .onnx.TypeProto elem_type = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TypeProto_Sequence, _impl_.elem_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .onnx.TypeProto elem_type = 1;
    {PROTOBUF_FIELD_OFFSET(TypeProto_Sequence, _impl_.elem_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TypeProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TypeProto_Sequence::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TypeProto.Sequence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.elem_type_ != nullptr);
    _impl_.elem_type_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TypeProto_Sequence::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TypeProto_Sequence& this_ = static_cast<const TypeProto_Sequence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TypeProto_Sequence::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TypeProto_Sequence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto.Sequence)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .onnx.TypeProto elem_type = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.elem_type_, this_._impl_.elem_type_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto.Sequence)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TypeProto_Sequence::ByteSizeLong(const MessageLite& base) {
  const TypeProto_Sequence& this_ = static_cast<const TypeProto_Sequence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TypeProto_Sequence::ByteSizeLong() const {
  const TypeProto_Sequence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TypeProto.Sequence)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .onnx.TypeProto elem_type = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.elem_type_);
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TypeProto_Sequence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TypeProto_Sequence*>(&to_msg);
  auto& from = static_cast<const TypeProto_Sequence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TypeProto.Sequence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.elem_type_ != nullptr);
    if (_this->_impl_.elem_type_ == nullptr) {
      _this->_impl_.elem_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.elem_type_);
    } else {
      _this->_impl_.elem_type_->MergeFrom(*from._impl_.elem_type_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TypeProto_Sequence::CopyFrom(const TypeProto_Sequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TypeProto.Sequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TypeProto_Sequence::InternalSwap(TypeProto_Sequence* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.elem_type_, other->_impl_.elem_type_);
}

// ===================================================================

class TypeProto_Map::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TypeProto_Map>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TypeProto_Map, _impl_._has_bits_);
};

TypeProto_Map::TypeProto_Map(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_Map_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TypeProto.Map)
}
PROTOBUF_NDEBUG_INLINE TypeProto_Map::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TypeProto_Map& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TypeProto_Map::TypeProto_Map(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TypeProto_Map& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_Map_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TypeProto_Map* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.value_type_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_type_)
                : nullptr;
  _impl_.key_type_ = from._impl_.key_type_;

  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto.Map)
}
PROTOBUF_NDEBUG_INLINE TypeProto_Map::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TypeProto_Map::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_type_),
           0,
           offsetof(Impl_, key_type_) -
               offsetof(Impl_, value_type_) +
               sizeof(Impl_::key_type_));
}
TypeProto_Map::~TypeProto_Map() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto.Map)
  SharedDtor(*this);
}
inline void TypeProto_Map::SharedDtor(MessageLite& self) {
  TypeProto_Map& this_ = static_cast<TypeProto_Map&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.value_type_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TypeProto_Map::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TypeProto_Map(arena);
}
constexpr auto TypeProto_Map::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TypeProto_Map),
                                            alignof(TypeProto_Map));
}
constexpr auto TypeProto_Map::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<19>{
      {
          &_TypeProto_Map_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TypeProto_Map::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TypeProto_Map>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TypeProto_Map::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TypeProto_Map>(), &TypeProto_Map::ByteSizeLong,
              &TypeProto_Map::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TypeProto_Map, _impl_._cached_size_),
          true,
      },
      "onnx.TypeProto.Map",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<19> TypeProto_Map_class_data_ =
    TypeProto_Map::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TypeProto_Map::GetClassData() const {
  return TypeProto_Map_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
TypeProto_Map::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TypeProto_Map, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TypeProto_Map_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TypeProto_Map>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .onnx.TypeProto value_type = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TypeProto_Map, _impl_.value_type_)}},
    // optional int32 key_type = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TypeProto_Map, _impl_.key_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 key_type = 1;
    {PROTOBUF_FIELD_OFFSET(TypeProto_Map, _impl_.key_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .onnx.TypeProto value_type = 2;
    {PROTOBUF_FIELD_OFFSET(TypeProto_Map, _impl_.value_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TypeProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TypeProto_Map::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TypeProto.Map)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.value_type_ != nullptr);
    _impl_.value_type_->Clear();
  }
  _impl_.key_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TypeProto_Map::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TypeProto_Map& this_ = static_cast<const TypeProto_Map&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TypeProto_Map::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TypeProto_Map& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto.Map)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 key_type = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_key_type(), target);
  }

  // optional .onnx.TypeProto value_type = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.value_type_, this_._impl_.value_type_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto.Map)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TypeProto_Map::ByteSizeLong(const MessageLite& base) {
  const TypeProto_Map& this_ = static_cast<const TypeProto_Map&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TypeProto_Map::ByteSizeLong() const {
  const TypeProto_Map& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TypeProto.Map)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .onnx.TypeProto value_type = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_type_);
    }
    // optional int32 key_type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_key_type());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TypeProto_Map::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TypeProto_Map*>(&to_msg);
  auto& from = static_cast<const TypeProto_Map&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TypeProto.Map)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.value_type_ != nullptr);
      if (_this->_impl_.value_type_ == nullptr) {
        _this->_impl_.value_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_type_);
      } else {
        _this->_impl_.value_type_->MergeFrom(*from._impl_.value_type_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.key_type_ = from._impl_.key_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TypeProto_Map::CopyFrom(const TypeProto_Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TypeProto.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TypeProto_Map::InternalSwap(TypeProto_Map* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TypeProto_Map, _impl_.key_type_)
      + sizeof(TypeProto_Map::_impl_.key_type_)
      - PROTOBUF_FIELD_OFFSET(TypeProto_Map, _impl_.value_type_)>(
          reinterpret_cast<char*>(&_impl_.value_type_),
          reinterpret_cast<char*>(&other->_impl_.value_type_));
}

// ===================================================================

class TypeProto_Optional::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TypeProto_Optional>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TypeProto_Optional, _impl_._has_bits_);
};

TypeProto_Optional::TypeProto_Optional(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_Optional_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TypeProto.Optional)
}
PROTOBUF_NDEBUG_INLINE TypeProto_Optional::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TypeProto_Optional& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TypeProto_Optional::TypeProto_Optional(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TypeProto_Optional& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_Optional_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TypeProto_Optional* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.elem_type_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.elem_type_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto.Optional)
}
PROTOBUF_NDEBUG_INLINE TypeProto_Optional::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TypeProto_Optional::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.elem_type_ = {};
}
TypeProto_Optional::~TypeProto_Optional() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto.Optional)
  SharedDtor(*this);
}
inline void TypeProto_Optional::SharedDtor(MessageLite& self) {
  TypeProto_Optional& this_ = static_cast<TypeProto_Optional&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.elem_type_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TypeProto_Optional::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TypeProto_Optional(arena);
}
constexpr auto TypeProto_Optional::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TypeProto_Optional),
                                            alignof(TypeProto_Optional));
}
constexpr auto TypeProto_Optional::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<24>{
      {
          &_TypeProto_Optional_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TypeProto_Optional::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TypeProto_Optional>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TypeProto_Optional::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TypeProto_Optional>(), &TypeProto_Optional::ByteSizeLong,
              &TypeProto_Optional::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TypeProto_Optional, _impl_._cached_size_),
          true,
      },
      "onnx.TypeProto.Optional",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<24> TypeProto_Optional_class_data_ =
    TypeProto_Optional::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TypeProto_Optional::GetClassData() const {
  return TypeProto_Optional_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
TypeProto_Optional::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TypeProto_Optional, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TypeProto_Optional_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TypeProto_Optional>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .onnx.TypeProto elem_type = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TypeProto_Optional, _impl_.elem_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .onnx.TypeProto elem_type = 1;
    {PROTOBUF_FIELD_OFFSET(TypeProto_Optional, _impl_.elem_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TypeProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TypeProto_Optional::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TypeProto.Optional)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.elem_type_ != nullptr);
    _impl_.elem_type_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TypeProto_Optional::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TypeProto_Optional& this_ = static_cast<const TypeProto_Optional&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TypeProto_Optional::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TypeProto_Optional& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto.Optional)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .onnx.TypeProto elem_type = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.elem_type_, this_._impl_.elem_type_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto.Optional)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TypeProto_Optional::ByteSizeLong(const MessageLite& base) {
  const TypeProto_Optional& this_ = static_cast<const TypeProto_Optional&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TypeProto_Optional::ByteSizeLong() const {
  const TypeProto_Optional& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TypeProto.Optional)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .onnx.TypeProto elem_type = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.elem_type_);
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TypeProto_Optional::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TypeProto_Optional*>(&to_msg);
  auto& from = static_cast<const TypeProto_Optional&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TypeProto.Optional)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.elem_type_ != nullptr);
    if (_this->_impl_.elem_type_ == nullptr) {
      _this->_impl_.elem_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.elem_type_);
    } else {
      _this->_impl_.elem_type_->MergeFrom(*from._impl_.elem_type_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TypeProto_Optional::CopyFrom(const TypeProto_Optional& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TypeProto.Optional)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TypeProto_Optional::InternalSwap(TypeProto_Optional* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.elem_type_, other->_impl_.elem_type_);
}

// ===================================================================

class TypeProto_SparseTensor::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TypeProto_SparseTensor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TypeProto_SparseTensor, _impl_._has_bits_);
};

TypeProto_SparseTensor::TypeProto_SparseTensor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_SparseTensor_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TypeProto.SparseTensor)
}
PROTOBUF_NDEBUG_INLINE TypeProto_SparseTensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TypeProto_SparseTensor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TypeProto_SparseTensor::TypeProto_SparseTensor(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TypeProto_SparseTensor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_SparseTensor_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TypeProto_SparseTensor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shape_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.shape_)
                : nullptr;
  _impl_.elem_type_ = from._impl_.elem_type_;

  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto.SparseTensor)
}
PROTOBUF_NDEBUG_INLINE TypeProto_SparseTensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TypeProto_SparseTensor::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shape_),
           0,
           offsetof(Impl_, elem_type_) -
               offsetof(Impl_, shape_) +
               sizeof(Impl_::elem_type_));
}
TypeProto_SparseTensor::~TypeProto_SparseTensor() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto.SparseTensor)
  SharedDtor(*this);
}
inline void TypeProto_SparseTensor::SharedDtor(MessageLite& self) {
  TypeProto_SparseTensor& this_ = static_cast<TypeProto_SparseTensor&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.shape_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TypeProto_SparseTensor::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TypeProto_SparseTensor(arena);
}
constexpr auto TypeProto_SparseTensor::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TypeProto_SparseTensor),
                                            alignof(TypeProto_SparseTensor));
}
constexpr auto TypeProto_SparseTensor::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<28>{
      {
          &_TypeProto_SparseTensor_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TypeProto_SparseTensor::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TypeProto_SparseTensor>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TypeProto_SparseTensor::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TypeProto_SparseTensor>(), &TypeProto_SparseTensor::ByteSizeLong,
              &TypeProto_SparseTensor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TypeProto_SparseTensor, _impl_._cached_size_),
          true,
      },
      "onnx.TypeProto.SparseTensor",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<28> TypeProto_SparseTensor_class_data_ =
    TypeProto_SparseTensor::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TypeProto_SparseTensor::GetClassData() const {
  return TypeProto_SparseTensor_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
TypeProto_SparseTensor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TypeProto_SparseTensor, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TypeProto_SparseTensor_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TypeProto_SparseTensor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .onnx.TensorShapeProto shape = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TypeProto_SparseTensor, _impl_.shape_)}},
    // optional int32 elem_type = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TypeProto_SparseTensor, _impl_.elem_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 elem_type = 1;
    {PROTOBUF_FIELD_OFFSET(TypeProto_SparseTensor, _impl_.elem_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .onnx.TensorShapeProto shape = 2;
    {PROTOBUF_FIELD_OFFSET(TypeProto_SparseTensor, _impl_.shape_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TensorShapeProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TypeProto_SparseTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TypeProto.SparseTensor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.shape_ != nullptr);
    _impl_.shape_->Clear();
  }
  _impl_.elem_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TypeProto_SparseTensor::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TypeProto_SparseTensor& this_ = static_cast<const TypeProto_SparseTensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TypeProto_SparseTensor::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TypeProto_SparseTensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto.SparseTensor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 elem_type = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_elem_type(), target);
  }

  // optional .onnx.TensorShapeProto shape = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.shape_, this_._impl_.shape_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto.SparseTensor)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TypeProto_SparseTensor::ByteSizeLong(const MessageLite& base) {
  const TypeProto_SparseTensor& this_ = static_cast<const TypeProto_SparseTensor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TypeProto_SparseTensor::ByteSizeLong() const {
  const TypeProto_SparseTensor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TypeProto.SparseTensor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional .onnx.TensorShapeProto shape = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_);
    }
    // optional int32 elem_type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_elem_type());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TypeProto_SparseTensor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TypeProto_SparseTensor*>(&to_msg);
  auto& from = static_cast<const TypeProto_SparseTensor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TypeProto.SparseTensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.shape_ != nullptr);
      if (_this->_impl_.shape_ == nullptr) {
        _this->_impl_.shape_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.shape_);
      } else {
        _this->_impl_.shape_->MergeFrom(*from._impl_.shape_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.elem_type_ = from._impl_.elem_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TypeProto_SparseTensor::CopyFrom(const TypeProto_SparseTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TypeProto.SparseTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TypeProto_SparseTensor::InternalSwap(TypeProto_SparseTensor* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TypeProto_SparseTensor, _impl_.elem_type_)
      + sizeof(TypeProto_SparseTensor::_impl_.elem_type_)
      - PROTOBUF_FIELD_OFFSET(TypeProto_SparseTensor, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
}

// ===================================================================

class TypeProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TypeProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TypeProto, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::onnx::TypeProto, _impl_._oneof_case_);
};

void TypeProto::set_allocated_tensor_type(::onnx::TypeProto_Tensor* PROTOBUF_NULLABLE tensor_type) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (tensor_type) {
    ::google::protobuf::Arena* submessage_arena = tensor_type->GetArena();
    if (message_arena != submessage_arena) {
      tensor_type = ::google::protobuf::internal::GetOwnedMessage(message_arena, tensor_type, submessage_arena);
    }
    set_has_tensor_type();
    _impl_.value_.tensor_type_ = tensor_type;
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.TypeProto.tensor_type)
}
void TypeProto::set_allocated_sequence_type(::onnx::TypeProto_Sequence* PROTOBUF_NULLABLE sequence_type) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (sequence_type) {
    ::google::protobuf::Arena* submessage_arena = sequence_type->GetArena();
    if (message_arena != submessage_arena) {
      sequence_type = ::google::protobuf::internal::GetOwnedMessage(message_arena, sequence_type, submessage_arena);
    }
    set_has_sequence_type();
    _impl_.value_.sequence_type_ = sequence_type;
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.TypeProto.sequence_type)
}
void TypeProto::set_allocated_map_type(::onnx::TypeProto_Map* PROTOBUF_NULLABLE map_type) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (map_type) {
    ::google::protobuf::Arena* submessage_arena = map_type->GetArena();
    if (message_arena != submessage_arena) {
      map_type = ::google::protobuf::internal::GetOwnedMessage(message_arena, map_type, submessage_arena);
    }
    set_has_map_type();
    _impl_.value_.map_type_ = map_type;
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.TypeProto.map_type)
}
void TypeProto::set_allocated_optional_type(::onnx::TypeProto_Optional* PROTOBUF_NULLABLE optional_type) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (optional_type) {
    ::google::protobuf::Arena* submessage_arena = optional_type->GetArena();
    if (message_arena != submessage_arena) {
      optional_type = ::google::protobuf::internal::GetOwnedMessage(message_arena, optional_type, submessage_arena);
    }
    set_has_optional_type();
    _impl_.value_.optional_type_ = optional_type;
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.TypeProto.optional_type)
}
void TypeProto::set_allocated_sparse_tensor_type(::onnx::TypeProto_SparseTensor* PROTOBUF_NULLABLE sparse_tensor_type) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (sparse_tensor_type) {
    ::google::protobuf::Arena* submessage_arena = sparse_tensor_type->GetArena();
    if (message_arena != submessage_arena) {
      sparse_tensor_type = ::google::protobuf::internal::GetOwnedMessage(message_arena, sparse_tensor_type, submessage_arena);
    }
    set_has_sparse_tensor_type();
    _impl_.value_.sparse_tensor_type_ = sparse_tensor_type;
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.TypeProto.sparse_tensor_type)
}
TypeProto::TypeProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.TypeProto)
}
PROTOBUF_NDEBUG_INLINE TypeProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::TypeProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        denotation_(arena, from.denotation_),
        value_{},
        _oneof_case_{from._oneof_case_[0]} {}

TypeProto::TypeProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TypeProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, TypeProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TypeProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kTensorType:
        _impl_.value_.tensor_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.tensor_type_);
        break;
      case kSequenceType:
        _impl_.value_.sequence_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.sequence_type_);
        break;
      case kMapType:
        _impl_.value_.map_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.map_type_);
        break;
      case kOptionalType:
        _impl_.value_.optional_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.optional_type_);
        break;
      case kSparseTensorType:
        _impl_.value_.sparse_tensor_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.sparse_tensor_type_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto)
}
PROTOBUF_NDEBUG_INLINE TypeProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        denotation_(arena),
        value_{},
        _oneof_case_{} {}

inline void TypeProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TypeProto::~TypeProto() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto)
  SharedDtor(*this);
}
inline void TypeProto::SharedDtor(MessageLite& self) {
  TypeProto& this_ = static_cast<TypeProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.denotation_.Destroy();
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void TypeProto::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:onnx.TypeProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kTensorType: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.tensor_type_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.value_.tensor_type_ != nullptr) {
          _impl_.value_.tensor_type_->Clear();
        }
      }
      break;
    }
    case kSequenceType: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.sequence_type_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.value_.sequence_type_ != nullptr) {
          _impl_.value_.sequence_type_->Clear();
        }
      }
      break;
    }
    case kMapType: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.map_type_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.value_.map_type_ != nullptr) {
          _impl_.value_.map_type_->Clear();
        }
      }
      break;
    }
    case kOptionalType: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.optional_type_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.value_.optional_type_ != nullptr) {
          _impl_.value_.optional_type_->Clear();
        }
      }
      break;
    }
    case kSparseTensorType: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.sparse_tensor_type_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        if (_impl_.value_.sparse_tensor_type_ != nullptr) {
          _impl_.value_.sparse_tensor_type_->Clear();
        }
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* PROTOBUF_NONNULL TypeProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TypeProto(arena);
}
constexpr auto TypeProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TypeProto),
                                            alignof(TypeProto));
}
constexpr auto TypeProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<15>{
      {
          &_TypeProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TypeProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<TypeProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TypeProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<TypeProto>(), &TypeProto::ByteSizeLong,
              &TypeProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TypeProto, _impl_._cached_size_),
          true,
      },
      "onnx.TypeProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<15> TypeProto_class_data_ =
    TypeProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TypeProto::GetClassData() const {
  return TypeProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 5, 0, 2>
TypeProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TypeProto, _impl_._has_bits_),
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966854,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TypeProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::TypeProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string denotation = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(TypeProto, _impl_.denotation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .onnx.TypeProto.Tensor tensor_type = 1;
    {PROTOBUF_FIELD_OFFSET(TypeProto, _impl_.value_.tensor_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .onnx.TypeProto.Sequence sequence_type = 4;
    {PROTOBUF_FIELD_OFFSET(TypeProto, _impl_.value_.sequence_type_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .onnx.TypeProto.Map map_type = 5;
    {PROTOBUF_FIELD_OFFSET(TypeProto, _impl_.value_.map_type_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string denotation = 6;
    {PROTOBUF_FIELD_OFFSET(TypeProto, _impl_.denotation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .onnx.TypeProto.SparseTensor sparse_tensor_type = 8;
    {PROTOBUF_FIELD_OFFSET(TypeProto, _impl_.value_.sparse_tensor_type_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .onnx.TypeProto.Optional optional_type = 9;
    {PROTOBUF_FIELD_OFFSET(TypeProto, _impl_.value_.optional_type_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::TypeProto_Tensor>()},
      {::_pbi::TcParser::GetTable<::onnx::TypeProto_Sequence>()},
      {::_pbi::TcParser::GetTable<::onnx::TypeProto_Map>()},
      {::_pbi::TcParser::GetTable<::onnx::TypeProto_SparseTensor>()},
      {::_pbi::TcParser::GetTable<::onnx::TypeProto_Optional>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TypeProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.denotation_.ClearNonDefaultToEmpty();
  }
  clear_value();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TypeProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TypeProto& this_ = static_cast<const TypeProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TypeProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TypeProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.value_case()) {
    case kTensorType: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.value_.tensor_type_, this_._impl_.value_.tensor_type_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSequenceType: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.value_.sequence_type_, this_._impl_.value_.sequence_type_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMapType: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.value_.map_type_, this_._impl_.value_.map_type_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string denotation = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_denotation();
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  switch (this_.value_case()) {
    case kSparseTensorType: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *this_._impl_.value_.sparse_tensor_type_, this_._impl_.value_.sparse_tensor_type_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOptionalType: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *this_._impl_.value_.optional_type_, this_._impl_.value_.optional_type_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TypeProto::ByteSizeLong(const MessageLite& base) {
  const TypeProto& this_ = static_cast<const TypeProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TypeProto::ByteSizeLong() const {
  const TypeProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.TypeProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional string denotation = 6;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_denotation());
    }
  }
  switch (this_.value_case()) {
    // .onnx.TypeProto.Tensor tensor_type = 1;
    case kTensorType: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.tensor_type_);
      break;
    }
    // .onnx.TypeProto.Sequence sequence_type = 4;
    case kSequenceType: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.sequence_type_);
      break;
    }
    // .onnx.TypeProto.Map map_type = 5;
    case kMapType: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.map_type_);
      break;
    }
    // .onnx.TypeProto.Optional optional_type = 9;
    case kOptionalType: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.optional_type_);
      break;
    }
    // .onnx.TypeProto.SparseTensor sparse_tensor_type = 8;
    case kSparseTensorType: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.sparse_tensor_type_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void TypeProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TypeProto*>(&to_msg);
  auto& from = static_cast<const TypeProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.TypeProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_internal_set_denotation(from._internal_denotation());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTensorType: {
        if (oneof_needs_init) {
          _this->_impl_.value_.tensor_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.tensor_type_);
        } else {
          _this->_impl_.value_.tensor_type_->CheckTypeAndMergeFrom(*from._impl_.value_.tensor_type_);
        }
        break;
      }
      case kSequenceType: {
        if (oneof_needs_init) {
          _this->_impl_.value_.sequence_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.sequence_type_);
        } else {
          _this->_impl_.value_.sequence_type_->CheckTypeAndMergeFrom(*from._impl_.value_.sequence_type_);
        }
        break;
      }
      case kMapType: {
        if (oneof_needs_init) {
          _this->_impl_.value_.map_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.map_type_);
        } else {
          _this->_impl_.value_.map_type_->CheckTypeAndMergeFrom(*from._impl_.value_.map_type_);
        }
        break;
      }
      case kOptionalType: {
        if (oneof_needs_init) {
          _this->_impl_.value_.optional_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.optional_type_);
        } else {
          _this->_impl_.value_.optional_type_->CheckTypeAndMergeFrom(*from._impl_.value_.optional_type_);
        }
        break;
      }
      case kSparseTensorType: {
        if (oneof_needs_init) {
          _this->_impl_.value_.sparse_tensor_type_ = ::google::protobuf::MessageLite::CopyConstruct(arena, *from._impl_.value_.sparse_tensor_type_);
        } else {
          _this->_impl_.value_.sparse_tensor_type_->CheckTypeAndMergeFrom(*from._impl_.value_.sparse_tensor_type_);
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void TypeProto::CopyFrom(const TypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TypeProto::InternalSwap(TypeProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.denotation_, &other->_impl_.denotation_, arena);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

// ===================================================================

class OperatorSetIdProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OperatorSetIdProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperatorSetIdProto, _impl_._has_bits_);
};

OperatorSetIdProto::OperatorSetIdProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, OperatorSetIdProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.OperatorSetIdProto)
}
PROTOBUF_NDEBUG_INLINE OperatorSetIdProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::OperatorSetIdProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        domain_(arena, from.domain_) {}

OperatorSetIdProto::OperatorSetIdProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OperatorSetIdProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, OperatorSetIdProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperatorSetIdProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:onnx.OperatorSetIdProto)
}
PROTOBUF_NDEBUG_INLINE OperatorSetIdProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        domain_(arena) {}

inline void OperatorSetIdProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
OperatorSetIdProto::~OperatorSetIdProto() {
  // @@protoc_insertion_point(destructor:onnx.OperatorSetIdProto)
  SharedDtor(*this);
}
inline void OperatorSetIdProto::SharedDtor(MessageLite& self) {
  OperatorSetIdProto& this_ = static_cast<OperatorSetIdProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.domain_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OperatorSetIdProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OperatorSetIdProto(arena);
}
constexpr auto OperatorSetIdProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OperatorSetIdProto),
                                            alignof(OperatorSetIdProto));
}
constexpr auto OperatorSetIdProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<24>{
      {
          &_OperatorSetIdProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OperatorSetIdProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<OperatorSetIdProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OperatorSetIdProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<OperatorSetIdProto>(), &OperatorSetIdProto::ByteSizeLong,
              &OperatorSetIdProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OperatorSetIdProto, _impl_._cached_size_),
          true,
      },
      "onnx.OperatorSetIdProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<24> OperatorSetIdProto_class_data_ =
    OperatorSetIdProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OperatorSetIdProto::GetClassData() const {
  return OperatorSetIdProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
OperatorSetIdProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperatorSetIdProto, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OperatorSetIdProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::OperatorSetIdProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 version = 2;
    {::_pbi::TcParser::FastV64S1,
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(OperatorSetIdProto, _impl_.version_)}},
    // optional string domain = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OperatorSetIdProto, _impl_.domain_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string domain = 1;
    {PROTOBUF_FIELD_OFFSET(OperatorSetIdProto, _impl_.domain_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int64 version = 2;
    {PROTOBUF_FIELD_OFFSET(OperatorSetIdProto, _impl_.version_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void OperatorSetIdProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.OperatorSetIdProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.domain_.ClearNonDefaultToEmpty();
  }
  _impl_.version_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OperatorSetIdProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OperatorSetIdProto& this_ = static_cast<const OperatorSetIdProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OperatorSetIdProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OperatorSetIdProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.OperatorSetIdProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string domain = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_domain();
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int64 version = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
            stream, this_._internal_version(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.OperatorSetIdProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OperatorSetIdProto::ByteSizeLong(const MessageLite& base) {
  const OperatorSetIdProto& this_ = static_cast<const OperatorSetIdProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OperatorSetIdProto::ByteSizeLong() const {
  const OperatorSetIdProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.OperatorSetIdProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // optional string domain = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_domain());
    }
    // optional int64 version = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_version());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void OperatorSetIdProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperatorSetIdProto*>(&to_msg);
  auto& from = static_cast<const OperatorSetIdProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.OperatorSetIdProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_domain(from._internal_domain());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.version_ = from._impl_.version_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void OperatorSetIdProto::CopyFrom(const OperatorSetIdProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.OperatorSetIdProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperatorSetIdProto::InternalSwap(OperatorSetIdProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
  swap(_impl_.version_, other->_impl_.version_);
}

// ===================================================================

class FunctionProto::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FunctionProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_._has_bits_);
};

FunctionProto::FunctionProto(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, FunctionProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:onnx.FunctionProto)
}
PROTOBUF_NDEBUG_INLINE FunctionProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::onnx::FunctionProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_{visibility, arena, from.input_},
        output_{visibility, arena, from.output_},
        attribute_{visibility, arena, from.attribute_},
        node_{visibility, arena, from.node_},
        opset_import_{visibility, arena, from.opset_import_},
        attribute_proto_{visibility, arena, from.attribute_proto_},
        value_info_{visibility, arena, from.value_info_},
        metadata_props_{visibility, arena, from.metadata_props_},
        name_(arena, from.name_),
        doc_string_(arena, from.doc_string_),
        domain_(arena, from.domain_),
        overload_(arena, from.overload_) {}

FunctionProto::FunctionProto(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FunctionProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, FunctionProto_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FunctionProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:onnx.FunctionProto)
}
PROTOBUF_NDEBUG_INLINE FunctionProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        input_{visibility, arena},
        output_{visibility, arena},
        attribute_{visibility, arena},
        node_{visibility, arena},
        opset_import_{visibility, arena},
        attribute_proto_{visibility, arena},
        value_info_{visibility, arena},
        metadata_props_{visibility, arena},
        name_(arena),
        doc_string_(arena),
        domain_(arena),
        overload_(arena) {}

inline void FunctionProto::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FunctionProto::~FunctionProto() {
  // @@protoc_insertion_point(destructor:onnx.FunctionProto)
  SharedDtor(*this);
}
inline void FunctionProto::SharedDtor(MessageLite& self) {
  FunctionProto& this_ = static_cast<FunctionProto&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.doc_string_.Destroy();
  this_._impl_.domain_.Destroy();
  this_._impl_.overload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FunctionProto::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FunctionProto(arena);
}
constexpr auto FunctionProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.input_) +
          decltype(FunctionProto::_impl_.input_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.output_) +
          decltype(FunctionProto::_impl_.output_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.attribute_) +
          decltype(FunctionProto::_impl_.attribute_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.attribute_proto_) +
          decltype(FunctionProto::_impl_.attribute_proto_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.node_) +
          decltype(FunctionProto::_impl_.node_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.opset_import_) +
          decltype(FunctionProto::_impl_.opset_import_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.value_info_) +
          decltype(FunctionProto::_impl_.value_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.metadata_props_) +
          decltype(FunctionProto::_impl_.metadata_props_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FunctionProto), alignof(FunctionProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FunctionProto::PlacementNew_,
                                 sizeof(FunctionProto),
                                 alignof(FunctionProto));
  }
}
constexpr auto FunctionProto::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataLite<19>{
      {
          &_FunctionProto_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FunctionProto::MergeImpl,
          ::google::protobuf::MessageLite::GetNewImpl<FunctionProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FunctionProto::SharedDtor,
          ::google::protobuf::MessageLite::GetClearImpl<FunctionProto>(), &FunctionProto::ByteSizeLong,
              &FunctionProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_._cached_size_),
          true,
      },
      "onnx.FunctionProto",
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<19> FunctionProto_class_data_ =
    FunctionProto::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FunctionProto::GetClassData() const {
  return FunctionProto_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 5, 0, 2>
FunctionProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950918,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    FunctionProto_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::onnx::FunctionProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string input = 4;
    {::_pbi::TcParser::FastBR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.input_)}},
    // repeated string output = 5;
    {::_pbi::TcParser::FastBR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.output_)}},
    // repeated string attribute = 6;
    {::_pbi::TcParser::FastBR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.attribute_)}},
    // repeated .onnx.NodeProto node = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.node_)}},
    // optional string doc_string = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 1, 0, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.doc_string_)}},
    // repeated .onnx.OperatorSetIdProto opset_import = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.opset_import_)}},
    // optional string domain = 10;
    {::_pbi::TcParser::FastBS1,
     {82, 2, 0, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.domain_)}},
    // repeated .onnx.AttributeProto attribute_proto = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 2, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.attribute_proto_)}},
    // repeated .onnx.ValueInfoProto value_info = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 3, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.value_info_)}},
    // optional string overload = 13;
    {::_pbi::TcParser::FastBS1,
     {106, 3, 0, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.overload_)}},
    // repeated .onnx.StringStringEntryProto metadata_props = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 4, PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.metadata_props_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated string input = 4;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.input_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated string output = 5;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.output_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated string attribute = 6;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.attribute_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated .onnx.NodeProto node = 7;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.node_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string doc_string = 8;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.doc_string_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.OperatorSetIdProto opset_import = 9;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.opset_import_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string domain = 10;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.domain_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.AttributeProto attribute_proto = 11;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.attribute_proto_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .onnx.ValueInfoProto value_info = 12;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.value_info_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string overload = 13;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.overload_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .onnx.StringStringEntryProto metadata_props = 14;
    {PROTOBUF_FIELD_OFFSET(FunctionProto, _impl_.metadata_props_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::onnx::NodeProto>()},
      {::_pbi::TcParser::GetTable<::onnx::OperatorSetIdProto>()},
      {::_pbi::TcParser::GetTable<::onnx::AttributeProto>()},
      {::_pbi::TcParser::GetTable<::onnx::ValueInfoProto>()},
      {::_pbi::TcParser::GetTable<::onnx::StringStringEntryProto>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void FunctionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.FunctionProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_.Clear();
  _impl_.output_.Clear();
  _impl_.attribute_.Clear();
  _impl_.node_.Clear();
  _impl_.opset_import_.Clear();
  _impl_.attribute_proto_.Clear();
  _impl_.value_info_.Clear();
  _impl_.metadata_props_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.doc_string_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.domain_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.overload_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FunctionProto::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FunctionProto& this_ = static_cast<const FunctionProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FunctionProto::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FunctionProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:onnx.FunctionProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string name = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_name();
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string input = 4;
  for (int i = 0, n = this_._internal_input_size(); i < n; ++i) {
    const auto& s = this_._internal_input().Get(i);
    target = stream->WriteString(4, s, target);
  }

  // repeated string output = 5;
  for (int i = 0, n = this_._internal_output_size(); i < n; ++i) {
    const auto& s = this_._internal_output().Get(i);
    target = stream->WriteString(5, s, target);
  }

  // repeated string attribute = 6;
  for (int i = 0, n = this_._internal_attribute_size(); i < n; ++i) {
    const auto& s = this_._internal_attribute().Get(i);
    target = stream->WriteString(6, s, target);
  }

  // repeated .onnx.NodeProto node = 7;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_node_size());
       i < n; i++) {
    const auto& repfield = this_._internal_node().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional string doc_string = 8;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_doc_string();
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // repeated .onnx.OperatorSetIdProto opset_import = 9;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_opset_import_size());
       i < n; i++) {
    const auto& repfield = this_._internal_opset_import().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional string domain = 10;
  if ((cached_has_bits & 0x00000004u) != 0) {
    const ::std::string& _s = this_._internal_domain();
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // repeated .onnx.AttributeProto attribute_proto = 11;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_attribute_proto_size());
       i < n; i++) {
    const auto& repfield = this_._internal_attribute_proto().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .onnx.ValueInfoProto value_info = 12;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_value_info_size());
       i < n; i++) {
    const auto& repfield = this_._internal_value_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            12, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional string overload = 13;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const ::std::string& _s = this_._internal_overload();
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 14;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_metadata_props_size());
       i < n; i++) {
    const auto& repfield = this_._internal_metadata_props().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            14, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.FunctionProto)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FunctionProto::ByteSizeLong(const MessageLite& base) {
  const FunctionProto& this_ = static_cast<const FunctionProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FunctionProto::ByteSizeLong() const {
  const FunctionProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:onnx.FunctionProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string input = 4;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_input().size());
      for (int i = 0, n = this_._internal_input().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_input().Get(i));
      }
    }
    // repeated string output = 5;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_output().size());
      for (int i = 0, n = this_._internal_output().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_output().Get(i));
      }
    }
    // repeated string attribute = 6;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_attribute().size());
      for (int i = 0, n = this_._internal_attribute().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_attribute().Get(i));
      }
    }
    // repeated .onnx.NodeProto node = 7;
    {
      total_size += 1UL * this_._internal_node_size();
      for (const auto& msg : this_._internal_node()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.OperatorSetIdProto opset_import = 9;
    {
      total_size += 1UL * this_._internal_opset_import_size();
      for (const auto& msg : this_._internal_opset_import()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.AttributeProto attribute_proto = 11;
    {
      total_size += 1UL * this_._internal_attribute_proto_size();
      for (const auto& msg : this_._internal_attribute_proto()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.ValueInfoProto value_info = 12;
    {
      total_size += 1UL * this_._internal_value_info_size();
      for (const auto& msg : this_._internal_value_info()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .onnx.StringStringEntryProto metadata_props = 14;
    {
      total_size += 1UL * this_._internal_metadata_props_size();
      for (const auto& msg : this_._internal_metadata_props()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional string doc_string = 8;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_doc_string());
    }
    // optional string domain = 10;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_domain());
    }
    // optional string overload = 13;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_overload());
    }
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void FunctionProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FunctionProto*>(&to_msg);
  auto& from = static_cast<const FunctionProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:onnx.FunctionProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input()->MergeFrom(from._internal_input());
  _this->_internal_mutable_output()->MergeFrom(from._internal_output());
  _this->_internal_mutable_attribute()->MergeFrom(from._internal_attribute());
  _this->_internal_mutable_node()->MergeFrom(
      from._internal_node());
  _this->_internal_mutable_opset_import()->MergeFrom(
      from._internal_opset_import());
  _this->_internal_mutable_attribute_proto()->MergeFrom(
      from._internal_attribute_proto());
  _this->_internal_mutable_value_info()->MergeFrom(
      from._internal_value_info());
  _this->_internal_mutable_metadata_props()->MergeFrom(
      from._internal_metadata_props());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_doc_string(from._internal_doc_string());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_internal_set_domain(from._internal_domain());
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_overload(from._internal_overload());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void FunctionProto::CopyFrom(const FunctionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.FunctionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FunctionProto::InternalSwap(FunctionProto* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_.InternalSwap(&other->_impl_.input_);
  _impl_.output_.InternalSwap(&other->_impl_.output_);
  _impl_.attribute_.InternalSwap(&other->_impl_.attribute_);
  _impl_.node_.InternalSwap(&other->_impl_.node_);
  _impl_.opset_import_.InternalSwap(&other->_impl_.opset_import_);
  _impl_.attribute_proto_.InternalSwap(&other->_impl_.attribute_proto_);
  _impl_.value_info_.InternalSwap(&other->_impl_.value_info_);
  _impl_.metadata_props_.InternalSwap(&other->_impl_.metadata_props_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.doc_string_, &other->_impl_.doc_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.overload_, &other->_impl_.overload_, arena);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace onnx
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
